<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>f00bar</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lancezhu.github.io/"/>
  <updated>2020-11-10T09:16:19.000Z</updated>
  <id>https://lancezhu.github.io/</id>
  
  <author>
    <name>lancezhu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于 LanceZhu</title>
    <link href="https://lancezhu.github.io/2020/11/10/about-me/"/>
    <id>https://lancezhu.github.io/2020/11/10/about-me/</id>
    <published>2020-11-10T09:16:19.000Z</published>
    <updated>2020-11-10T09:16:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h1><p>  A human being</p><p>  北邮信息与通信工程研究生在读</p><hr><p>  本日志主要记录软件开发相关的实践及可能会有的日常随想。</p><h2 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h2><p>  学习/运动/电影/读书</p><h2 id="软件开发"><a href="#软件开发" class="headerlink" title="软件开发"></a>软件开发</h2><h3 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h3><p>  <strong>熟悉</strong></p><ul><li>JavaScript/Node</li></ul><p>  <strong>了解</strong></p><ul><li>Python</li><li>Java</li><li>C++</li><li>Shell</li><li>SQL</li></ul><p>  <strong>使用过</strong></p><ul><li><p>PHP</p></li><li><p>Go</p></li><li><p>Verilog</p><h2 id="系统-框架-软件"><a href="#系统-框架-软件" class="headerlink" title="系统/框架/软件"></a>系统/框架/软件</h2></li></ul><p>  <strong>前端</strong></p><ul><li>微信小程序</li><li>Vue.js</li><li>React</li></ul><p>  <strong>后端</strong></p><ul><li>基于 Nodejs - Koa/Express/Egg</li><li>基于 Python - Django/Flask</li></ul><p>  <strong>其他</strong></p><ul><li><p>Linux Ubuntu/CentOS/Kali/树莓派</p></li><li><p>MySQL/MongoDB</p></li><li><p>Docker</p></li><li><p>…</p><h2 id="找到我"><a href="#找到我" class="headerlink" title="找到我"></a>找到我</h2></li><li><p>2937443168#qq.com</p></li><li><p><a href="f00bar.cn">个人网站 - f00bar.cn</a></p></li><li><p><a href="https://github.com/LanceZhu" target="_blank" rel="noopener">GitHub - LanceZhu</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;关于&quot;&gt;&lt;a href=&quot;#关于&quot; class=&quot;headerlink&quot; title=&quot;关于&quot;&gt;&lt;/a&gt;关于&lt;/h1&gt;&lt;p&gt;  A human being&lt;/p&gt;
&lt;p&gt;  北邮信息与通信工程研究生在读&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;  本日志主要记录软件开发相关的实践
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ELK-stack</title>
    <link href="https://lancezhu.github.io/2020/10/12/ELK-stack/"/>
    <id>https://lancezhu.github.io/2020/10/12/ELK-stack/</id>
    <published>2020-10-12T09:48:22.000Z</published>
    <updated>2020-10-12T09:48:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Note-ELK-Stack-Elasticsearch、Logstash、Kibana"><a href="#Note-ELK-Stack-Elasticsearch、Logstash、Kibana" class="headerlink" title="[Note] ELK Stack(Elasticsearch、Logstash、Kibana)"></a>[Note] ELK Stack(Elasticsearch、Logstash、Kibana)</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>ELK Stack 由 <strong>E</strong>lasticSearch、<strong>L</strong>ogstash、<strong>K</strong>ibana 组成，分别用来处理日志的检索、收集及可视化。本文的契机是为了替代原有的正则匹配字符串的检索方式，优化全文检索的效果。下面介绍 ELK 的安装及基本使用（以 MySQL 为数据源，使用 Logstash 导入至 ElasticSearch，最终通过 Kibana 验证查询效果）</p><h2 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a>基本要求</h2><p>推荐硬件配置：内存 4G</p><h2 id="ELK-Stack"><a href="#ELK-Stack" class="headerlink" title="ELK Stack"></a>ELK Stack</h2><p>以下安装适用于 Ubuntu 等 Debian 系操作系统。</p><h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.9/deb.html" target="_blank" rel="noopener"><strong>download</strong></a></p><p><strong>配置软件源+安装依赖</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -</span><br><span class="line">$ sudo apt-get install apt-transport-https</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"deb https://artifacts.elastic.co/packages/7.x/apt stable main"</span> | sudo tee /etc/apt/sources.list.d/elastic-7.x.list</span><br></pre></td></tr></table></figure><p><strong>安装 Elasticsearch</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update &amp;&amp; sudo apt-get install elasticsearch</span><br><span class="line">$ sudo systemctl start elasticsearch.service</span><br><span class="line">$ curl -X <span class="string">'GET'</span> <span class="string">'http://localhost:9200'</span> <span class="comment"># 验证安装、启动是否成功</span></span><br></pre></td></tr></table></figure><h3 id="Logstash"><a href="#Logstash" class="headerlink" title="Logstash"></a>Logstash</h3><p><a href="https://www.elastic.co/guide/en/logstash/7.9/installing-logstash.html" target="_blank" rel="noopener"><strong>download</strong></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update &amp;&amp; sudo apt-get install logstash</span><br><span class="line">$ <span class="built_in">cd</span> /usr/share/logstash/bin</span><br><span class="line">$ sudo chmod 777 -R /usr/share/logstash/data</span><br><span class="line">$ bash logstash -f mp-analyzer-debug-list.conf <span class="comment"># -f 选择配置文件</span></span><br></pre></td></tr></table></figure><h4 id="Mysql-输入插件"><a href="#Mysql-输入插件" class="headerlink" title="Mysql 输入插件"></a>Mysql 输入插件</h4><p>默认安装，可通过以下操作进行验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/share/logstash/bin</span><br><span class="line">$ bash logstash-plugin list <span class="comment"># 查看所有插件</span></span><br><span class="line">$ bash logstash-plugin list | grep logstash-input-jdbc</span><br></pre></td></tr></table></figure><p><strong>jdbc(Java database connector)</strong></p><p>用于连接 MySQL</p><p><a href="https://dev.mysql.com/downloads/connector/j/" target="_blank" rel="noopener"><strong>download</strong></a></p><h4 id="Elasticsearch-输出插件"><a href="#Elasticsearch-输出插件" class="headerlink" title="Elasticsearch 输出插件"></a>Elasticsearch 输出插件</h4><p>默认安装，可通过以下操作进行验证</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/share/logstash/bin</span><br><span class="line">$ bash logstash-plugin list <span class="comment"># 查看所有插件</span></span><br><span class="line">$ bash logstash-plugin list | grep logstash-output-elasticsearch</span><br><span class="line">logstash-output-elasticsearch</span><br></pre></td></tr></table></figure><h4 id="kibana"><a href="#kibana" class="headerlink" title="kibana"></a>kibana</h4><p><a href="https://www.elastic.co/guide/en/kibana/7.9/deb.html" target="_blank" rel="noopener"><strong>download</strong></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update &amp;&amp; sudo apt-get install kibana</span><br><span class="line">$ sudo systemctl start kibana</span><br><span class="line">$ open http://localhost:5601 <span class="comment"># 打开浏览器查看</span></span><br></pre></td></tr></table></figure><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>MySQL 作为数据源，使用 Logstash 导入至 Elasticsearch，并通过 kibana 可视化查询，验证查询效果</p><h3 id="启动-ELK"><a href="#启动-ELK" class="headerlink" title="启动 ELK"></a>启动 ELK</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接启动 elasticsearch</span></span><br><span class="line">$ sudo systemctl start elasticsearch.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件指定 MySQL、jdbc及输出格式</span></span><br><span class="line">$ <span class="built_in">cd</span> /usr/share/logstash/bin</span><br><span class="line">$ bash logstash -f mp-analyzer-debug-list.conf <span class="comment"># -f 选择配置文件，mp-analyzer-debug-list.conf 内容见下文</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接启动 kibana</span></span><br><span class="line">$ sudo systemctl start kibana</span><br><span class="line">$ open http://localhost:5601 <span class="comment"># 打开浏览器查看</span></span><br></pre></td></tr></table></figure><h3 id="配置-ELK"><a href="#配置-ELK" class="headerlink" title="配置 ELK"></a>配置 ELK</h3><h4 id="logstash"><a href="#logstash" class="headerlink" title="logstash"></a>logstash</h4><p>mp-analyzer-debug-list.conf</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">input &#123;</span><br><span class="line">  jdbc &#123;</span><br><span class="line"><span class="code">    jdbc_driver_library =&gt; "/home/ubuntu/projects/mysql-connector-java/mysql-connector-java-8.0.21/mysql-connector-java-8.0.21.jar"</span></span><br><span class="line"><span class="code">    jdbc_driver_class =&gt; "com.mysql.jdbc.Driver"</span></span><br><span class="line"><span class="code">    jdbc_connection_string =&gt; "jdbc:mysql://your_server_ip:3306/database"</span></span><br><span class="line"><span class="code">    jdbc_user =&gt; "user"</span></span><br><span class="line"><span class="code">    jdbc_password =&gt; "password"</span></span><br><span class="line"><span class="code">    schedule =&gt; "* * * * *"</span></span><br><span class="line"><span class="code">    statement =&gt; "SELECT * FROM movies WHERE id &gt;= 0"</span></span><br><span class="line"><span class="code">    use_column_value =&gt; true</span></span><br><span class="line"><span class="code">    tracking_column_type =&gt; "numeric"</span></span><br><span class="line"><span class="code">    tracking_column =&gt; "id"</span></span><br><span class="line"><span class="code">    last_run_metadata_path =&gt; "syncpoint_table"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line"><span class="code">    hosts =&gt; ["127.0.0.1"]</span></span><br><span class="line"><span class="code">    index =&gt; "debug-list"</span></span><br><span class="line"><span class="code">    document_id =&gt; "%&#123;id&#125;"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Note-ELK-Stack-Elasticsearch、Logstash、Kibana&quot;&gt;&lt;a href=&quot;#Note-ELK-Stack-Elasticsearch、Logstash、Kibana&quot; class=&quot;headerlink&quot; title=&quot;[Not
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>icejs-todos-server</title>
    <link href="https://lancezhu.github.io/2020/10/12/icejs-todos-server/"/>
    <id>https://lancezhu.github.io/2020/10/12/icejs-todos-server/</id>
    <published>2020-10-12T09:46:39.000Z</published>
    <updated>2020-10-12T09:46:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何同时开发小程序-中后台应用-feat-icejs-服务端篇"><a href="#如何同时开发小程序-中后台应用-feat-icejs-服务端篇" class="headerlink" title="如何同时开发小程序+中后台应用(feat: icejs) - 服务端篇"></a>如何同时开发小程序+中后台应用(feat: icejs) - 服务端篇</h1><blockquote><p>知乎：<a href="https://zhuanlan.zhihu.com/p/217932764" target="_blank" rel="noopener">使用 React + icejs 开发一个完整的 Todo 应用 - 服务端篇</a><br>语雀：<a href="https://www.yuque.com/f00bar/bsa44q/pt2tsh" target="_blank" rel="noopener">如何同时开发小程序+中后台应用(feat: icejs) - 服务端篇</a></p></blockquote><blockquote><p><a href="https://ice.work/" target="_blank" rel="noopener">icejs</a> 主要应用场景为开发中后台应用。但 <a href="mailto:icejs@1.7.0">icejs@1.7.0</a> 版本开始支持<a href="https://ice.work/docs/miniprogram/start" target="_blank" rel="noopener">小程序开发</a>。如果你想使用 React 同时开发中后台应用和小程序，那么 icejs 即可满足你。使用同一套技术体系，减少技术切换成本，提高研发效率。</p></blockquote><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文将演示如何使用 icejs 构建 Todo 小程序 + 后台管理系统，同时包括相应服务端。</p><p>Todo 应用的功能或需求为：</p><ul><li>小程序端：展示 Todo 列表，支持增删改查，以及同步数据到服务端。</li><li>后台管理系统：小程序用户信息和增删改查的管理系统。</li></ul><p>整体的技术栈设计如下：</p><ul><li>*<em>小程序 *</em><ul><li>icejs 框架</li><li>universal-request 数据请求</li></ul></li><li><strong>后台管理系统</strong><ul><li>icejs 框架</li><li>icejs build-plugin-ice-auth 插件，权限管理</li><li>fusion design UI 组件库</li></ul></li><li><strong>服务端</strong> + <strong>数据库</strong><ul><li>eggjs 服务端框架</li><li>egg-sequelize + mysql2 用于 eggjs 连接 MySQL 数据库</li><li>MySQL 数据库</li><li>uuid 唯一 id 生成</li></ul></li></ul><p>因篇幅较长，如何同时开发小程序+中后台应用（feat: icejs）将分为三篇分别介绍。</p><ul><li>小程序篇</li></ul><p>使用 icejs 开发 Todo 小程序。</p><ul><li>后台管理系统篇</li></ul><p>使用 icejs 开发 Todo 小程序后台管理系统。</p><ul><li>服务端篇（本文）</li></ul><p>搭建服务 Todo 小程序及后台管理系统的服务端。</p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><blockquote><p>项目代码见 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">icejs-miniapp-admin/server</a><br>服务端基于 eggjs，详细文档参考<a href="https://eggjs.org/" target="_blank" rel="noopener">官网</a></p></blockquote><h3 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h3><p>首先创建文件夹用于存放服务端代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir icejs-todos/server -p &amp;&amp; <span class="built_in">cd</span> icejs-todos/server</span><br></pre></td></tr></table></figure><p>使用脚手架生成项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm init egg --<span class="built_in">type</span>=simple</span><br></pre></td></tr></table></figure><p>启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install &amp;&amp; npm run dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器打开 http://localhost:7001 可看到项目正常启动</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598521003072-d6f23f24-2bff-4222-b240-7ef2e0559590.png#align=left&display=inline&height=1031&margin=%5Bobject%20Object%5D&originHeight=1031&originWidth=1927&status=done&style=none&width=1927" alt=""></p><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>下面设计数据表结构。数据库采用 MySQL 5.7。</p><blockquote><p>可通过 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server/config/db/sql" target="_blank" rel="noopener">icejs-miniapp-admin#db/sql</a> 建库、建表、导入数据。</p></blockquote><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><p>首先连接 MySQL 数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以 root 用户身份登录，密码在运行命令后按照提示输入</span></span><br><span class="line">$ mysql -u root -p</span><br></pre></td></tr></table></figure><p>连接到 MySQL 数据库后，在 MySQL 终端中通过以下命令，创建 icejs_todos 数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database icejs_todos;</span><br></pre></td></tr></table></figure><p>通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>查看所有数据库。</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598521003846-722656db-7b93-4ee0-a149-edba4e7a031b.png#align=left&display=inline&height=175&margin=%5Bobject%20Object%5D&originHeight=175&originWidth=238&status=done&style=none&width=238" alt=""></p><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><p>创建 icejs_todos 用户并配置相应权限以管理数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create user &#39;icejs_todos&#39;@&#39;%&#39; identified by &#39;icejs_todos&#39;;</span><br><span class="line">grant all privileges on icejs_todos.* to &#39;icejs_todos&#39;@&#39;%&#39;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>在之后的数据库创建的操作中，切换为 icejs_todos 用户。</p><h4 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h4><p>本应用涉及三个实体：</p><ul><li>管理员 admin</li><li>用户 users</li><li>代办事项 todos</li></ul><p>分别对应三个表</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598521004341-5923f3c1-b023-4816-89b9-171e0f4bc3a6.png#align=left&display=inline&height=186&margin=%5Bobject%20Object%5D&originHeight=186&originWidth=253&status=done&style=none&width=253" alt=""></p><p>admin 对应后台管理系统管理员</p><p>users 对应小程序用户</p><p>todos 对应代办事项</p><p>其中 users 与 todos 存在一对多关系，即一个用户对应多个 todo。</p><p>各表字段结构为</p><p><strong>admin</strong></p><table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>管理员 id</td></tr><tr><td>username</td><td>varchar(63)</td><td>管理员 用户名</td></tr><tr><td>password</td><td>varchar(63)</td><td>管理员密码</td></tr></tbody></table><p><strong>users</strong></p><table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>openId</td><td>varchar(45)</td><td>用户 id，通过微信小程序认证获取</td></tr><tr><td>username</td><td>varchar(45)</td><td>用户名</td></tr></tbody></table><p><strong>todos</strong></p><table><thead><tr><th>字段</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>varchar(45)</td><td>todo id</td></tr><tr><td>content</td><td>json</td><td>todo 内容</td></tr><tr><td>openId</td><td>varchar(45)</td><td>对应 users 表中的 openId</td></tr></tbody></table><p>可通过以下命令创建数据表：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">use icejs_todos; -- 选择数据库</span><br><span class="line"></span><br><span class="line">CREATE TABLE <span class="string">`admin`</span> (</span><br><span class="line">  <span class="string">`id`</span> int(<span class="number">11</span>) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`username`</span> varchar(<span class="number">63</span>) NOT NULL DEFAULT <span class="string">''</span> COMMENT <span class="string">'管理员名称'</span>,</span><br><span class="line">  <span class="string">`password`</span> varchar(<span class="number">63</span>) NOT NULL DEFAULT <span class="string">''</span> COMMENT <span class="string">'管理员密码'</span>,</span><br><span class="line">  PRIMARY KEY (<span class="string">`id`</span>)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=<span class="number">2</span> DEFAULT CHARSET=utf8mb4 COMMENT=<span class="string">'管理员'</span>;</span><br><span class="line"></span><br><span class="line">CREATE TABLE <span class="string">`todos`</span> (</span><br><span class="line">  <span class="string">`id`</span> varchar(<span class="number">45</span>) NOT NULL,</span><br><span class="line">  <span class="string">`content`</span> json DEFAULT NULL COMMENT <span class="string">'TODO 内容'</span>,</span><br><span class="line">  <span class="string">`openId`</span> varchar(<span class="number">45</span>) NOT NULL,</span><br><span class="line">  PRIMARY KEY (<span class="string">`id`</span>)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=<span class="string">'TODO 列表'</span>;</span><br><span class="line"></span><br><span class="line">CREATE TABLE <span class="string">`users`</span> (</span><br><span class="line">  <span class="string">`openId`</span> varchar(<span class="number">45</span>) NOT NULL COMMENT <span class="string">'微信小程序 用户 openid'</span>,</span><br><span class="line">  <span class="string">`username`</span> varchar(<span class="number">45</span>) DEFAULT <span class="string">''</span> COMMENT <span class="string">'用户名'</span>,</span><br><span class="line">  PRIMARY KEY (<span class="string">`openId`</span>)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT=<span class="string">'用户列表'</span>;</span><br></pre></td></tr></table></figure><p>可通过 desc table_name 命令查看表字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc admin; -- 查看 admin</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598862229820-6259535d-12bb-4865-8bc6-d0a241d484d0.png#align=left&display=inline&height=189&margin=%5Bobject%20Object%5D&name=mysql-desc.png&originHeight=189&originWidth=616&size=10780&status=done&style=none&width=616" alt="mysql-desc.png"></p><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><p>添加管理员</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`admin`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">'user'</span>,<span class="string">'password'</span>); <span class="comment">-- 管理员用户名：user 密码：password</span></span><br></pre></td></tr></table></figure><p>添加测试 Todo</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`todos`</span> <span class="keyword">VALUES</span> (<span class="string">'14624e16-ba83-4fac-acb0-474502d0d18d'</span>,<span class="string">'&#123;\"text\": \"Learning ES2016\", \"completed\": true&#125;'</span>,<span class="string">'1'</span>),(<span class="string">'1e7158d5-c687-4a11-9a62-755e35a88491'</span>,<span class="string">'&#123;\"text\": \"Learning 小程序\", \"completed\": false&#125;'</span>,<span class="string">'1'</span>),(<span class="string">'f111d741-294b-44a2-8200-9f9b805fd9d2'</span>,<span class="string">'&#123;\"text\": \"Learning Javascript\", \"completed\": true&#125;'</span>,<span class="string">'1'</span>);</span><br></pre></td></tr></table></figure><p>添加测试用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`users`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>,<span class="string">'测试用户1'</span>),(<span class="string">'2'</span>,<span class="string">'测试用户2'</span>);</span><br></pre></td></tr></table></figure><h4 id="管理数据库"><a href="#管理数据库" class="headerlink" title="管理数据库"></a>管理数据库</h4><p>可通过 <a href="https://www.mysql.com/products/workbench/" target="_blank" rel="noopener">MySQL Workbench</a> 管理数据库。<br>连接数据库<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599113402608-33d8a2e8-7e48-4d36-bb9c-c5cf322bb982.png#align=left&display=inline&height=1031&margin=%5Bobject%20Object%5D&name=server5.png&originHeight=1031&originWidth=1915&size=196824&status=done&style=none&width=1915" alt="server5.png"><br>查看数据表及表内容<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599113627138-ace00ace-aacc-41c6-8289-62ba702cc76e.png#align=left&display=inline&height=1028&margin=%5Bobject%20Object%5D&name=server6.png&originHeight=1028&originWidth=1918&size=234355&status=done&style=none&width=1918" alt="server6.png"></p><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>通过 egg-sequelize、mysql2 连接 MySQL 数据库。</p><h4 id="安装所需依赖"><a href="#安装所需依赖" class="headerlink" title="安装所需依赖"></a>安装所需依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save egg-sequelize mysql2</span><br></pre></td></tr></table></figure><h4 id="配置-egg-sequelize"><a href="#配置-egg-sequelize" class="headerlink" title="配置 egg-sequelize"></a>配置 egg-sequelize</h4><ul><li><p>首先启用 egg-sequelize 插件，即在 config/plugin.js 中配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config/plugin.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// had enabled by egg</span></span><br><span class="line">  <span class="comment">// static: &#123;</span></span><br><span class="line">  <span class="comment">//   enable: true,</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  sequelize: &#123;</span><br><span class="line">    enable: <span class="literal">true</span>,</span><br><span class="line">    package: <span class="string">'egg-sequelize'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>并在配置 egg-sequelize 以连接到 MySQL</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config/config.default.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">appInfo</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * built-in config</span></span><br><span class="line"><span class="comment">   * @type &#123;Egg.EggAppConfig&#125;</span></span><br><span class="line"><span class="comment">   **/</span></span><br><span class="line">  <span class="keyword">const</span> config = exports = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 配置 sequelize</span></span><br><span class="line">  config.sequelize = &#123;</span><br><span class="line">    dialect: <span class="string">'mysql'</span>,        <span class="comment">// 所用数据库为 MySQL</span></span><br><span class="line">    host: <span class="string">'localhost'</span>,       <span class="comment">// 连接配置</span></span><br><span class="line">    port: <span class="number">3306</span>,</span><br><span class="line">    username: <span class="string">'icejs_todos'</span>,</span><br><span class="line">    password: <span class="string">'icejs_todos'</span>,</span><br><span class="line">    database: <span class="string">'icejs_todos'</span>,</span><br><span class="line">    define: &#123;</span><br><span class="line">      freezeTableName: <span class="literal">true</span>,  <span class="comment">// 保持数据库中表名不变，避免 admin 变为 admins</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h4 id="连接示例"><a href="#连接示例" class="headerlink" title="连接示例"></a>连接示例</h4><p>下面以查询数据库中的所有 todos 为例演示如何查询数据。即访问 <a href="http://localhost:3001/api/todos" target="_blank" rel="noopener">http://localhost:3001/api/todos</a> 路由查看所有 todos。</p><ol><li><p>为 todos 表建立 model<br>建立 app/model/todos.js 文件，实现 model Todos 与 MySQL 数据表 todos 的对应。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/model/todos.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; STRING &#125; = app.Sequelize;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> Todos = app.model.define(<span class="string">'todos'</span>, &#123;</span><br><span class="line">    id: &#123; <span class="attr">type</span>: STRING(<span class="number">45</span>), <span class="attr">primaryKey</span>: <span class="literal">true</span>, <span class="attr">allowNull</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    content: <span class="built_in">JSON</span>,</span><br><span class="line">    openId: STRING(<span class="number">45</span>),</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    timestamps: <span class="literal">false</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Todos;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>具体查询<br>建立 app/controller/admin/todos.js 文件，通过 Todos model 查询相应数据，并添加到返回体中。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/admin/todos.js</span></span><br><span class="line"><span class="keyword">const</span> Controller = <span class="built_in">require</span>(<span class="string">'egg'</span>).Controller;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TodosController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">  <span class="keyword">async</span> list() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询所有 todos</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> app.model.Todos.findAndCountAll();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加到返回体上</span></span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">      code: <span class="number">1000</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">        total: res.count,</span><br><span class="line">        list: res.rows,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = TodosController;</span><br></pre></td></tr></table></figure></li><li><p>添加路由 /api/todos 实现访问该路由返回所有 Todos 数据。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/router.js</span></span><br><span class="line"><span class="keyword">const</span> ROUTER_PREFIX = <span class="string">'/api'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;Egg.Application&#125; app - egg application</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; router, controller &#125; = app;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// todos 路由 /api/todos</span></span><br><span class="line">  router.get(<span class="string">`<span class="subst">$&#123;ROUTER_PREFIX&#125;</span>/todos`</span>, controller.admin.todos.list);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>启动项目，查看效果</p></li></ol><p>启动服务端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run dev</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:7001/api/todos" target="_blank" rel="noopener">http://localhost:7001/api/todos</a> 可看到所有 Todos。<br>    <img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598861614362-e3ba787b-bd1a-4bc3-9b4d-95fcb13c3736.png#align=left&display=inline&height=1026&margin=%5Bobject%20Object%5D&originHeight=1026&originWidth=1920&status=done&style=none&width=1920" alt=""></p><h3 id="账户管理"><a href="#账户管理" class="headerlink" title="账户管理"></a>账户管理</h3><h4 id="后台管理系统"><a href="#后台管理系统" class="headerlink" title="后台管理系统"></a>后台管理系统</h4><p>功能包括账户的登录/登出与对用户请求的权限验证。</p><p><strong>登录/登出</strong></p><p>首先添加 admin Model，实现到数据库表 admin 的映射。Controller 中可调用该 model 查询或添加管理员。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/model/admin.js</span></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; STRING, INTEGER &#125; = app.Sequelize;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> Admin = app.model.define(<span class="string">'admin'</span>, &#123;</span><br><span class="line">    id: &#123; <span class="attr">type</span>: INTEGER, <span class="attr">primaryKey</span>: <span class="literal">true</span>, <span class="attr">allowNull</span>: <span class="literal">false</span>, <span class="attr">autoIncrement</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    username: STRING(<span class="number">63</span>),</span><br><span class="line">    password: STRING(<span class="number">63</span>),</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    timestamps: <span class="literal">false</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> Admin;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>配置 session，标识用户账户状态（登录态/登出态）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/config/config.default.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">appInfo</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// disable csrf 避免前端跨域发起 POST 请求时，请求被拦截</span></span><br><span class="line">  config.security = &#123;</span><br><span class="line">    csrf: &#123;</span><br><span class="line">      enable: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// session</span></span><br><span class="line">  <span class="keyword">const</span> authKey = <span class="string">'icejs-todos'</span>;</span><br><span class="line">  config.session = &#123;</span><br><span class="line">    key: authKey,</span><br><span class="line">    maxAge: <span class="number">24</span> * <span class="number">3600</span> * <span class="number">1000</span>, <span class="comment">// 有效期 1 天</span></span><br><span class="line">    httpOnly: <span class="literal">true</span>,</span><br><span class="line">    encrypt: <span class="literal">true</span>,            <span class="comment">// 加密</span></span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// session auth key</span></span><br><span class="line">  config.authKey = authKey;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>添加 controller 处理登录/登出逻辑</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/admin/auth.js</span></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Controller = <span class="built_in">require</span>(<span class="string">'egg'</span>).Controller;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">  <span class="keyword">async</span> login() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> &#123; authKey &#125; = app.config;</span><br><span class="line">    <span class="keyword">const</span> formData = ctx.request.body;</span><br><span class="line">    <span class="keyword">const</span> &#123; name, password &#125; = formData; <span class="comment">// 获取用户名及密码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询用户是否存在</span></span><br><span class="line">    <span class="keyword">const</span> user = <span class="keyword">await</span> app.model.Admin.findAll(&#123;</span><br><span class="line">      where: &#123;</span><br><span class="line">        username: name,</span><br><span class="line">        password,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> code = <span class="number">2000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (user.length) &#123;</span><br><span class="line">      code = <span class="number">1000</span>;</span><br><span class="line">      <span class="comment">// 通过 session 保存登录状态</span></span><br><span class="line">      ctx.session.auth = authKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">      code,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> logout() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ctx &#125; = <span class="keyword">this</span>;</span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">      code: <span class="number">1000</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 登出后清除登录状态</span></span><br><span class="line">    ctx.session.auth = <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = AuthController;</span><br></pre></td></tr></table></figure><p>配置路由，前端可通过 API 进行登录和登出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ROUTER_PREFIX = <span class="string">'/api'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;Egg.Application&#125; app - egg application</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; router, controller &#125; = app;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ############### admin #############</span></span><br><span class="line">  <span class="comment">// auth</span></span><br><span class="line">  router.post(<span class="string">`<span class="subst">$&#123;ROUTER_PREFIX&#125;</span>/auth/login`</span>, controller.admin.auth.login);</span><br><span class="line">  router.get(<span class="string">`<span class="subst">$&#123;ROUTER_PREFIX&#125;</span>/auth/logout`</span>, controller.admin.auth.logout);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>此时后台管理系统登录登出功能已完成。</p><p><strong>鉴权</strong></p><p>对于某些操作需要对用户进行鉴权，如添加 Todo（/api/todos/add）。<br>鉴权可通过中间件 middleware 的形式。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/middleware/auth.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">options = &#123;&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; authKey &#125; = options;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">ctx, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> auth = ctx.session.auth;</span><br><span class="line">    <span class="comment">// 根据 session 鉴权</span></span><br><span class="line">    <span class="keyword">if</span> (auth === authKey) &#123;</span><br><span class="line">      <span class="keyword">await</span> next();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      ctx.body = &#123;</span><br><span class="line">        code: <span class="number">2000</span>,</span><br><span class="line">        msg: <span class="string">'auth fail'</span>,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>对需要鉴权的操作启用该中间件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/router.js</span></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ROUTER_PREFIX = <span class="string">'/api'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;Egg.Application&#125; app - egg application</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; router, controller, middleware &#125; = app;</span><br><span class="line">  <span class="keyword">const</span> authMiddleware = middleware.auth(&#123;</span><br><span class="line">    authKey: app.config.authKey,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// /api/todos/add 路由启用 authMiddleware</span></span><br><span class="line">  <span class="comment">// 此处未编写 controller.admin.todos.add，仅做示例说明，可自行添加。</span></span><br><span class="line">  router.post(<span class="string">`<span class="subst">$&#123;ROUTER_PREFIX&#125;</span>/todos/add`</span>, authMiddleware, controller.admin.todos.add);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>后台管理系统的账户管理功能已完成。<br>主要使用情形包括：</p><ul><li><p>前端发起登录请求（用户名，密码）-&gt;服务端验证用户信息-&gt;验证通过-&gt;返回登录凭证（session）</p></li><li><p>前端发起登出请求-&gt;服务端删除登录凭证（session）</p></li><li><p>前端访问需登录接口-&gt;服务端验证登录信息（session）-&gt;验证通过-&gt;返回数据</p><h4 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h4><p>小程序的登录凭证为 openId，从微信开放数据中获取。<br>具体逻辑为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/controller/miniapp/auth.js</span></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Controller = <span class="built_in">require</span>(<span class="string">'egg'</span>).Controller;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 openId</span></span><br><span class="line"><span class="comment">// https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/login/auth.code2Session.html</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">code2Session</span>(<span class="params">ctx, &#123; appId, appSecret, code, grantType = <span class="string">'authorization_code'</span> &#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> URL = <span class="string">'https://api.weixin.qq.com/sns/jscode2session'</span>;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> ctx.curl(<span class="string">`<span class="subst">$&#123;URL&#125;</span>?appid=<span class="subst">$&#123;appId&#125;</span>&amp;secret=<span class="subst">$&#123;appSecret&#125;</span>&amp;js_code=<span class="subst">$&#123;code&#125;</span>&amp;grant_type=<span class="subst">$&#123;grantType&#125;</span>`</span>, &#123;</span><br><span class="line">    dataType: <span class="string">'json'</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> result.data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthController</span> <span class="keyword">extends</span> <span class="title">Controller</span> </span>&#123;</span><br><span class="line">  <span class="keyword">async</span> login() &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; ctx, app &#125; = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">const</span> formData = ctx.request.body;</span><br><span class="line">    <span class="keyword">const</span> &#123; code &#125; = formData; <span class="comment">// code 在小程序端通过 wx.login 获取</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; appId, appSecret &#125; = app.config.miniapp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> session = <span class="keyword">await</span> code2Session(ctx, &#123;</span><br><span class="line">      appId,</span><br><span class="line">      appSecret,</span><br><span class="line">      code,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> &#123; <span class="attr">openid</span>: openId &#125; = session;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// openId 保存至数据库</span></span><br><span class="line">    <span class="keyword">await</span> app.model.Users.findOrCreate(&#123;</span><br><span class="line">      where: &#123;</span><br><span class="line">        openId,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    ctx.body = &#123;</span><br><span class="line">      code: <span class="number">1000</span>,</span><br><span class="line">      data: &#123;</span><br><span class="line">        openId,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = AuthController;</span><br></pre></td></tr></table></figure><p>添加路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/router.js</span></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ROUTER_PREFIX = <span class="string">'/api'</span>;</span><br><span class="line"><span class="keyword">const</span> MINIAPP_PREFIX = <span class="string">'/mp'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @param &#123;Egg.Application&#125; app - egg application</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="params">app</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; router, controller &#125; = app;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ############### miniapp #############</span></span><br><span class="line">  <span class="comment">// auth</span></span><br><span class="line">  router.post(<span class="string">`<span class="subst">$&#123;ROUTER_PREFIX&#125;</span><span class="subst">$&#123;MINIAPP_PREFIX&#125;</span>/auth/login`</span>, controller.miniapp.auth.login);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>小程序的账户管理逻辑完成。<br>主要使用情形有：</p></li><li><p>用户发起登录请求（code wx.login 获取）-&gt; 服务端获取 openId，并返回</p></li><li><p>用户发起操作请求（携带 openId）-&gt;服务端执行操作（依据 openId）</p><h3 id="API-设计"><a href="#API-设计" class="headerlink" title="API 设计"></a>API 设计</h3></li></ul><p>分别为后台管理系统和小程序设置不同 API 路由。<br>后台管理系统 API 前缀为  <code>/api</code><br>小程序 API 前缀为 <code>/api/mp</code> </p><h4 id="API-路由列表"><a href="#API-路由列表" class="headerlink" title="API 路由列表"></a>API 路由列表</h4><ul><li>后台管理系统<ul><li><code>/api/auth/roles</code> 获取用户权限</li><li><code>/api/auth/login</code> 登录</li><li><code>/api/auth/logout</code> 登出</li><li><code>/api/users</code> 获取用户列表</li><li><code>/api/todos</code> 获取 Todo 列表</li><li><code>/api/todos/add</code> 添加 Todo</li><li><code>/api/todo/edit</code> 编辑 Todo</li><li><code>/api/todo/del/:id</code> 删除 Todo</li><li><code>/api/todo/view/:id</code> 查看 Todo</li></ul></li><li>小程序<ul><li><code>/api/mp/auth/login</code> 登录</li><li><code>/api/mp/todos</code> 获取 Todo 列表</li><li><code>/api/mp/todos/add</code> 添加 Todo</li><li><code>/api/mp/todo/edit</code> 编辑 Todo</li><li><code>/api/mp/todo/del/:id</code> 删除 Todo</li><li><code>/api/mp/todo/view/:id</code> 查看 Todo</li><li><code>/api/mp/user/edit</code> 更改用户信息</li></ul></li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598861644202-bc0e8bee-43fc-4f75-ad1b-78af4151dc98.png#align=left&display=inline&height=769&margin=%5Bobject%20Object%5D&originHeight=769&originWidth=949&status=done&style=none&width=949" alt=""></p><h4 id="API-实现"><a href="#API-实现" class="headerlink" title="API 实现"></a>API 实现</h4><p>连接数据库-连接示例小节介绍了 <code>/api/todos</code> 获取 Todo 列表的逻辑；账户管理小节介绍了 <code>/api/auth/login</code><br>、 <code>/api/auth/logout</code> 及 <code>/api/mp/auth/login</code> 的逻辑。<br>其余 API 与以上所介绍内容类似，不再详细介绍。可查看 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server/app/controller" target="_blank" rel="noopener">icejs-miniapp-admin#/controller</a></p><h3 id="前后端联调"><a href="#前后端联调" class="headerlink" title="前后端联调"></a>前后端联调</h3><p>当服务端完成后，便可使用真实后端接口替换小程序篇及后台管理系统篇开发时使用的 Mock 接口。</p><h4 id="小程序-1"><a href="#小程序-1" class="headerlink" title="小程序"></a>小程序</h4><p>以获取 Todo 列表为例</p><ul><li><p>修改 todos service</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/services/todos.js</span></span><br><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'universal-request'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换原有 mock 接口</span></span><br><span class="line"><span class="keyword">const</span> URL_PREFIX = <span class="string">'http://localhost:7001/api/mp'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// // 此处为 mock 接口，仅包含查询固定 todos 列表。其他功能如对小程序的增删改查需要服务端</span></span><br><span class="line"><span class="comment">// const URL_PREFIX = 'https://easy-mock.bookset.io/mock/5f4f05642ff5d50508b3d21b/todos_mock'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> list (&#123; openId &#125;) &#123;</span><br><span class="line">    <span class="keyword">let</span> todos = [];</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> URL = <span class="string">`<span class="subst">$&#123;URL_PREFIX&#125;</span>/todos?openId=<span class="subst">$&#123;openId&#125;</span>`</span>;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request(&#123;</span><br><span class="line">        url: URL</span><br><span class="line">      &#125;);</span><br><span class="line">      todos = res.data.data.todos;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> todos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>todos 页面中调用</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/pages/todos/index.jsx</span></span><br><span class="line">+ <span class="keyword">import</span> todosService <span class="keyword">from</span> <span class="string">'@/services/todos'</span>; <span class="comment">// 引入 todos service</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Todos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="comment">// lifecycle function</span></span><br><span class="line">  <span class="comment">// usePageShow 函数修改如下</span></span><br><span class="line">  usePageShow(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// 通过数据请求获取 Todos 数据</span></span><br><span class="line">    <span class="keyword">const</span> openId = <span class="string">'1'</span>; <span class="comment">// 此处省略 openId 获取逻辑</span></span><br><span class="line">    <span class="keyword">const</span> todos = <span class="keyword">await</span> todosService.list(openId);</span><br><span class="line">    setTodos(todos);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">// 渲染 todos</span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Todo 的增删改查逻辑与获取 Todo 列表类似。可直接查看</p><h4 id="后台管理系统-1"><a href="#后台管理系统-1" class="headerlink" title="后台管理系统"></a>后台管理系统</h4><p>后台管理系统篇已将各接口及调用逻辑编写完整，只需编辑 build.json 将接口地址指向服务端即可</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// build.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"proxy"</span>: &#123;</span><br><span class="line">    <span class="attr">"/api"</span>: &#123;</span><br><span class="line">      <span class="attr">"enable"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"target"</span>: <span class="string">"http://localhost:7001"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3></li></ul><p>服务端已完成。数据存储在 MySQL 数据库中，前端应用可通过 API 接口与后端交互。</p><p>本文介绍了服务端的开发，主要包括数据库的设计及具体使用；账户系统的设计及实现；整体 API 的设计。</p><p>项目代码见 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">icejs-miniapp-admin/server</a>。</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>到此为止，如何同时开发小程序+中后台应用（feat: icejs）内容已全部完成。</p><p>通过三篇文章</p><ul><li>小程序篇</li><li>后台管理系统篇</li><li>服务端篇</li></ul><p>进行说明。</p><p>以开发一个 Todo 小程序及后台管理系统为例，并提供相应的服务端，演示了如何使用 icejs 同时开发小程序和中后台应用。</p><p>项目代码包括：</p><ul><li>小程序 <a href="https://github.com/ice-lab/miniprogram-materials/tree/master/scaffolds/todos" target="_blank" rel="noopener">miniprogram-materials/scaffolds/todos</a></li><li>后台管理系统 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/client" target="_blank" rel="noopener">icejs-miniapp-admin/client</a></li><li>服务端 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">icejs-miniapp-admin/server</a></li></ul><p>文章中未详细描述的内容可直接查看以上代码。也可运行上述代码查看效果。</p><p>小程序已发布，可微信搜索** icejs todos 示例** 或直接扫描下方小程序码体验。</p><blockquote><p>因微信小程序限制，个人主体无法发布备忘录性质小程序。该实例仅包含展示页面。</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/jpeg/2070295/1598521000847-41b20dba-08f0-4248-be35-dc3cfaf4dc45.jpeg#align=left&display=inline&height=258&margin=%5Bobject%20Object%5D&originHeight=258&originWidth=258&status=done&style=none&width=258" alt=""></p><p>使用 icejs 开发小程序和中后台应用，使得开发者免于在不同技术栈中切换，减少学习成本和使用不同技术栈带来的切换成本，提升开发效率。</p><p>欢迎使用 icejs 开发小程序和提供反馈！</p><h2 id="推荐阅读及参考"><a href="#推荐阅读及参考" class="headerlink" title="推荐阅读及参考"></a>推荐阅读及参考</h2><ul><li><a href="https://ice.work/" target="_blank" rel="noopener">飞冰</a></li><li><a href="https://ice.work/docs/miniprogram/start" target="_blank" rel="noopener">icejs 小程序官方文档</a></li><li><a href="https://eggjs.org/" target="_blank" rel="noopener">eggjs</a></li><li><a href="https://eggjs.org/zh-cn/tutorials/sequelize.html" target="_blank" rel="noopener">eggjs sequelize 教程</a></li><li><a href="https://github.com/ice-lab/miniprogram-materials/tree/master/scaffolds/todos" target="_blank" rel="noopener">Todos 小程序代码</a></li><li><a href="https://github.com/ice-lab/icejs-miniapp-admin/client" target="_blank" rel="noopener">Todos 后台管理系统代码</a></li><li><a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">Todos 服务端代码</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何同时开发小程序-中后台应用-feat-icejs-服务端篇&quot;&gt;&lt;a href=&quot;#如何同时开发小程序-中后台应用-feat-icejs-服务端篇&quot; class=&quot;headerlink&quot; title=&quot;如何同时开发小程序+中后台应用(feat: icejs) -
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>icejs-todos-management</title>
    <link href="https://lancezhu.github.io/2020/10/12/icejs-todos-management/"/>
    <id>https://lancezhu.github.io/2020/10/12/icejs-todos-management/</id>
    <published>2020-10-12T09:46:07.000Z</published>
    <updated>2020-10-12T09:46:07.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何同时开发小程序-中后台应用-feat-icejs-后台管理系统篇"><a href="#如何同时开发小程序-中后台应用-feat-icejs-后台管理系统篇" class="headerlink" title="如何同时开发小程序+中后台应用(feat: icejs) - 后台管理系统篇"></a>如何同时开发小程序+中后台应用(feat: icejs) - 后台管理系统篇</h1><blockquote><p>知乎：<a href="https://zhuanlan.zhihu.com/p/217929230" target="_blank" rel="noopener">使用 React + icejs 开发一个完整的 Todo 应用 - 后台系统篇</a><br>语雀：<a href="https://www.yuque.com/f00bar/bsa44q/qov20h" target="_blank" rel="noopener">如何同时开发小程序+中后台应用(feat: icejs) - 后台管理系统篇</a></p></blockquote><blockquote><p><a href="https://ice.work/" target="_blank" rel="noopener">icejs</a> 主要应用场景为开发中后台应用。但 <a href="mailto:icejs@1.7.0">icejs@1.7.0</a> 版本开始支持<a href="https://ice.work/docs/miniprogram/start" target="_blank" rel="noopener">小程序开发</a> 。如果你想使用 React 同时开发中后台应用和小程序，那么 icejs 即可满足你。使用同一套技术体系，减少技术切换成本，提高研发效率。</p></blockquote><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文将演示如何使用 icejs 构建 Todo 小程序 + 后台管理系统，同时包括相应服务端。</p><p>Todo 应用的功能或需求为：</p><ul><li>小程序端：展示 Todo 列表，支持增删改查，以及同步数据到服务端。</li><li>后台管理系统：小程序用户信息和增删改查的管理系统。</li></ul><p>整体的技术栈设计如下：</p><ul><li>*<em>小程序 *</em><ul><li>icejs 框架</li><li>universal-request 数据请求</li></ul></li><li><strong>后台管理系统</strong><ul><li>icejs 框架</li><li>icejs build-plugin-ice-auth 插件，权限管理</li><li>fusion design UI 组件库</li></ul></li><li><strong>服务端</strong> + <strong>数据库</strong><ul><li>eggjs 服务端框架</li><li>egg-sequelize + mysql2 用于 eggjs 连接 MySQL 数据库</li><li>MySQL 数据库</li><li>uuid 唯一 id 生成</li></ul></li></ul><p>因篇幅较长，如何同时开发小程序+中后台应用（feat: icejs）将分为三篇分别介绍。</p><ul><li>小程序篇</li></ul><p>使用 icejs 开发 Todo 小程序。</p><ul><li>后台管理系统篇（本文）</li></ul><p>使用 icejs 开发 Todo 小程序后台管理系统。</p><ul><li>服务端篇</li></ul><p>搭建服务 Todo 小程序及后台管理系统的服务端。</p><h2 id="后台管理系统"><a href="#后台管理系统" class="headerlink" title="后台管理系统"></a>后台管理系统</h2><blockquote><p>项目代码见 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/client" target="_blank" rel="noopener">icejs-miniapp-admin/client</a><br>后台管理系统基于 <a href="https://ice.work/docs/guide/about" target="_blank" rel="noopener">icejs</a></p></blockquote><p>后台管理系统实现对小程序内容的管理。</p><p>具体功能包括：</p><ul><li>账户登录/登出</li><li>用户列表查看、查看某个用户所有代办事项（Todo）</li><li>代办事项列表查看、增删改查</li></ul><h3 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h3><h4 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h4><p>创建文件夹存放后台管理系统代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir icejs-todos/client -p &amp;&amp; <span class="built_in">cd</span> icejs-todos/client</span><br></pre></td></tr></table></figure><p>基于 React 模板 <a href="https://ice.work/scaffold" target="_blank" rel="noopener">Fusion Design Pro - JS</a> 创建项目</p><blockquote><p>后台管理系统绝大部分内容基于该模板，可先尝试熟悉该模板。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm init ice . @alifd/fusion-design-pro-js <span class="comment"># 当前目录初始化项目</span></span><br></pre></td></tr></table></figure><p>启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install &amp;&amp; npm run start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开浏览器 http://localhost:3333 可看到项目正常启动</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598520996962-f9a09e46-d343-4862-b277-51cd5be73f17.png#align=left&display=inline&height=900&margin=%5Bobject%20Object%5D&originHeight=900&originWidth=1890&status=done&style=none&width=1890" alt=""></p><h4 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .ice                                // icejs 运行时临时目录</span><br><span class="line">├── public</span><br><span class="line">│   ├── favicon.png                     // favicon</span><br><span class="line">│   └── index.html                      // 应用入口</span><br><span class="line">├── src                                 // 源码目录</span><br><span class="line">│   ├── components                      // 全局组件</span><br><span class="line">│   │   ├── LocaleProvider              // 多语言</span><br><span class="line">│   │   │   └── index.jsx</span><br><span class="line">│   │   └── PageHeader                  // 页首</span><br><span class="line">│   │       ├── index.jsx</span><br><span class="line">│   │       └── index.module.scss</span><br><span class="line">│   ├── layouts                         // 布局组件</span><br><span class="line">│   │   ├── BasicLayout                 // 基本布局</span><br><span class="line">│   │   │   ├── components</span><br><span class="line">│   │   │   ├── index.jsx</span><br><span class="line">│   │   │   └── menuConfig.js           // 侧边栏配置</span><br><span class="line">│   │   └── UserLayout                  // 登录/注册页布局</span><br><span class="line">│   │       ├── index.jsx</span><br><span class="line">│   │       └── index.module.scss</span><br><span class="line">│   ├── locales                         // 多语言</span><br><span class="line">│   │   ├── en-US</span><br><span class="line">│   │   │   └── index.js</span><br><span class="line">│   │   └── zh-CN</span><br><span class="line">│   │       └── index.js</span><br><span class="line">│   ├── models                          // 全局状态</span><br><span class="line">│   │   └── user.js</span><br><span class="line">│   ├── pages                           // 页面组件 包含较多页面，此处省略</span><br><span class="line">│   ├── utils                           // 工具函数</span><br><span class="line">│   │   └── locale.js</span><br><span class="line">│   ├── app.jsx                         // 应用入口</span><br><span class="line">│   ├── global.scss                     // 全局样式</span><br><span class="line">│   └── routes.js                       // 路由配置</span><br><span class="line">├── .editorconfig</span><br><span class="line">├── .eslintignore</span><br><span class="line">├── .eslintrc.js</span><br><span class="line">├── .gitignore</span><br><span class="line">├── .prettierignore</span><br><span class="line">├── .prettierrc.js</span><br><span class="line">├── .stylelintignore</span><br><span class="line">├── .stylelintrc.js</span><br><span class="line">├── README.md                            // README</span><br><span class="line">├── build.json                           // icejs 工程配置</span><br><span class="line">├── jsconfig.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">├── screenshot.png</span><br><span class="line">└── tsconfig.json</span><br></pre></td></tr></table></figure><h3 id="页面编写"><a href="#页面编写" class="headerlink" title="页面编写"></a>页面编写</h3><p>根据 Todo 应用需求对 Fusion Design Pro - JS 模板加以修改，编写相应页面，通过 API 接口与服务端交互。</p><p>调整目录结构：</p><ul><li>删除 src/pages 未使用页面</li><li>添加用户管理页和代办事项页（基于 src/pages/FusionDialogTable）</li><li>修改基本页面布局组件 src/layouts/BasicLayout</li><li>添加数据请求文件夹 src/services</li></ul><p>调整后的页面主要包括：</p><ul><li>登录页 src/pages/Login</li></ul><p>该页用于账户登录</p><ul><li>首页 src/pages/Home</li></ul><p>该页用于介绍后台管理系统</p><ul><li>用户管理页：src/pages/Users<br>该页面实现用户的展示及查看用户所创建的 Todo。</li><li>代办事项页：src/pages/Todos<br>该页面提供对于 Todo 的增删改查操作。</li></ul><p>调整后的目录结构如下：</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">  .</span><br><span class="line">  ├── .ice</span><br><span class="line">  ├── public</span><br><span class="line">  │   ├── favicon.png</span><br><span class="line">  │   └── index.html</span><br><span class="line">  ├── src</span><br><span class="line">  │   ├── components</span><br><span class="line">  │   │   ├── LocaleProvider</span><br><span class="line">  │   │   └── PageHeader</span><br><span class="line">  │   ├── layouts</span><br><span class="line">  │   │   ├── BasicLayout</span><br><span class="line">  │   │   └── UserLayout</span><br><span class="line">  │   ├── locales</span><br><span class="line">  │   │   ├── en-US</span><br><span class="line">  │   │   └── zh-CN</span><br><span class="line">  │   ├── models</span><br><span class="line">  │   │   └── user.js</span><br><span class="line">  │   ├── pages                  // 移除无用页面，只保留 Home Login Register</span><br><span class="line">  │   │   ├── Home</span><br><span class="line">  │   │   ├── Login</span><br><span class="line">  │   │   ├── Register</span><br><span class="line"><span class="addition">+ │   │   ├── Todos              // 代办事项页</span></span><br><span class="line"><span class="addition">+ │   │   └── Users              // 用户页</span></span><br><span class="line"><span class="addition">+ │   ├── services               // 数据请求</span></span><br><span class="line"><span class="addition">+ │   │   ├── auth.js            // 登录登出</span></span><br><span class="line"><span class="addition">+ │   │   ├── todos.js           // 代码事项</span></span><br><span class="line"><span class="addition">+ │   │   └── users.js           // 用户</span></span><br><span class="line">  │   ├── utils</span><br><span class="line">  │   │   └── locale.js</span><br><span class="line">  │   ├── app.jsx</span><br><span class="line">  │   ├── global.scss</span><br><span class="line">  │   └── routes.js</span><br><span class="line">  ├── .editorconfig</span><br><span class="line">  ├── .eslintcache</span><br><span class="line">  ├── .eslintignore</span><br><span class="line">  ├── .eslintrc.js</span><br><span class="line">  ├── .prettierignore</span><br><span class="line">  ├── .prettierrc.js</span><br><span class="line">  ├── .stylelintignore</span><br><span class="line">  ├── .stylelintrc.js</span><br><span class="line">  ├── README.md</span><br><span class="line">  ├── build.json</span><br><span class="line">  ├── jsconfig.json</span><br><span class="line">  ├── package-lock.json</span><br><span class="line">  ├── package.json</span><br><span class="line">  └── tsconfig.json</span><br></pre></td></tr></table></figure><p>UI 主要基于 Fusion Design Pro - JS 模板修改。故不在进行具体介绍。可直接查看项目代码。<br>可将 Todos、Users、Home 页从此处复制到本项目中，完成页面编写。</p><p>页面编写完成后，可配置对应路由和配置侧边栏</p><h4 id="路由配置"><a href="#路由配置" class="headerlink" title="路由配置"></a>路由配置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// route.js</span></span><br><span class="line"><span class="comment">// 引入路由组件</span></span><br><span class="line"><span class="keyword">import</span> UserLayout <span class="keyword">from</span> <span class="string">'@/layouts/UserLayout'</span>;</span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">'@/pages/Login'</span>;</span><br><span class="line"><span class="keyword">import</span> BasicLayout <span class="keyword">from</span> <span class="string">'@/layouts/BasicLayout'</span>;</span><br><span class="line"><span class="keyword">import</span> Home <span class="keyword">from</span> <span class="string">'@/pages/Home'</span>;</span><br><span class="line"><span class="keyword">import</span> Users <span class="keyword">from</span> <span class="string">'@/pages/Users'</span>;</span><br><span class="line"><span class="keyword">import</span> Todos <span class="keyword">from</span> <span class="string">'@/pages/Todos'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routerConfig = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/user'</span>,         <span class="comment">// 配置路由</span></span><br><span class="line">    component: UserLayout, <span class="comment">// 配置路由对应组件</span></span><br><span class="line">    children: [            <span class="comment">// 配置子路由</span></span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/login'</span>,</span><br><span class="line">        component: Login,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/'</span>,</span><br><span class="line">        redirect: <span class="string">'/user/login'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">'/'</span>,</span><br><span class="line">    component: BasicLayout,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/home'</span>,</span><br><span class="line">        component: Home,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/users/:openId'</span>,</span><br><span class="line">        component: Todos,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/users'</span>,</span><br><span class="line">        component: Users</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/todos'</span>,</span><br><span class="line">        component: Todos</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'/'</span>,</span><br><span class="line">        redirect: <span class="string">'/home'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> routerConfig;</span><br></pre></td></tr></table></figure><h4 id="侧边栏配置"><a href="#侧边栏配置" class="headerlink" title="侧边栏配置"></a>侧边栏配置</h4><p>侧边栏通过 menuConfig.js 进行配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/layouts/BasicLayout/menuConfig.js</span></span><br><span class="line"><span class="keyword">const</span> headerMenuConfig = [];</span><br><span class="line"><span class="comment">// 侧边栏配置</span></span><br><span class="line"><span class="keyword">const</span> asideMenuConfig = [</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">'首页'</span>,</span><br><span class="line">    path: <span class="string">'/home'</span>,</span><br><span class="line">    icon: <span class="string">'chart-pie'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">'代办事项'</span>,</span><br><span class="line">    path: <span class="string">'/todos'</span>,</span><br><span class="line">    icon: <span class="string">'calendar'</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">'用户列表'</span>,</span><br><span class="line">    path: <span class="string">'/users'</span>,</span><br><span class="line">    icon: <span class="string">'account'</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"><span class="keyword">export</span> &#123; headerMenuConfig, asideMenuConfig &#125;;</span><br></pre></td></tr></table></figure><p>到现在为止，页面编写已完成。此时还不能查看页面效果。各页面中有调用数据请求服务，下面需要添加数据请求。</p><h3 id="数据请求"><a href="#数据请求" class="headerlink" title="数据请求"></a>数据请求</h3><p>数据请求直接采用 icejs 中的<a href="https://ice.work/docs/guide/basic/request" target="_blank" rel="noopener">数据请求方案</a>。用户只需从 ice 中导出 request 模块即可发起数据请求。<br>即：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">'ice'</span>; <span class="comment">// 引入数据请求库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 发起 GET 请求</span></span><br><span class="line"><span class="keyword">async</span> list () &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> request.get(<span class="string">'/todos'</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 发起 POST 请求</span></span><br><span class="line">  <span class="keyword">async</span> del (id) &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> request.post(<span class="string">'/todos/del'</span>, &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service-编写"><a href="#service-编写" class="headerlink" title="service 编写"></a>service 编写</h4><p>本项目中的数据请求主要包括</p><ul><li>账户登录、登出</li><li>用户列表展示</li><li>Todo 列表展示及增删改查</li></ul><p>具体的逻辑在 src/services 中。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">src/services</span><br><span class="line">├── auth.js   // 账户登录登出</span><br><span class="line">├── todos.js  // Todo 列表查询及增删改查</span><br><span class="line">└── users.js  // 用户列表查询</span><br></pre></td></tr></table></figure><p>auth 包括获取用户角色，登录，登出</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">'ice'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 获取用户角色</span></span><br><span class="line">  <span class="keyword">async</span> getRoles () &#123;</span><br><span class="line">    <span class="keyword">let</span> roles = [];</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request.get(<span class="string">'/auth/roles'</span>);</span><br><span class="line">      roles = res.data.roles;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> roles;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 登录</span></span><br><span class="line">  <span class="keyword">async</span> login (data) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> request.post(<span class="string">'/auth/login'</span>, data)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 登出</span></span><br><span class="line">  <span class="keyword">async</span> logout () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> request.get(<span class="string">'/auth/logout'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>users 包括用户列表的获取</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">'ice'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 获取用户列表，支持分页查询</span></span><br><span class="line">  <span class="keyword">async</span> list(&#123; current, pageSize &#125;) &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request.get(<span class="string">`/users?current=<span class="subst">$&#123;current&#125;</span>&amp;size=<span class="subst">$&#123;pageSize&#125;</span>`</span>);</span><br><span class="line">      data = res.data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>todos 包括查询 Todo 列表，及对 Todo 的增删改查</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">'ice'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 根据分页数据及用户 id 查询 Todo 列表</span></span><br><span class="line">  <span class="keyword">async</span> list (&#123; current, pageSize, openId &#125;) &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> URL = <span class="string">`/todos?current=<span class="subst">$&#123;current&#125;</span>&amp;size=<span class="subst">$&#123;pageSize&#125;</span>`</span></span><br><span class="line">      <span class="keyword">if</span> (openId) &#123;</span><br><span class="line">        URL = <span class="string">`<span class="subst">$&#123;URL&#125;</span>&amp;openId=<span class="subst">$&#123;openId&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request.get(URL);</span><br><span class="line">      data = res.data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 为用户添加 Todo</span></span><br><span class="line">  <span class="keyword">async</span> add (&#123; content, openId &#125;) &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request.post(<span class="string">'/todos/add'</span>, &#123;</span><br><span class="line">        openId,</span><br><span class="line">        content</span><br><span class="line">      &#125;)</span><br><span class="line">      data = res.data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 根据 id 删除 Todo</span></span><br><span class="line">  <span class="keyword">async</span> del (id) &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request.get(<span class="string">`/todos/del/<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">      data = res.data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 编辑 Todo</span></span><br><span class="line">  <span class="keyword">async</span> edit (id, &#123; openId, content &#125;) &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request.post(<span class="string">'/todos/edit'</span>, &#123;</span><br><span class="line">        id,</span><br><span class="line">        openId,</span><br><span class="line">        content</span><br><span class="line">      &#125;)</span><br><span class="line">      data = res.data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 查看 Todo</span></span><br><span class="line">  <span class="keyword">async</span> view (id) &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;&#125;;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> res = <span class="keyword">await</span> request.get(<span class="string">`/todos/view/<span class="subst">$&#123;id&#125;</span>`</span>)</span><br><span class="line">      data = res.data;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="built_in">console</span>.error(err);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可对 request 请求进行全局配置，使各请求均以 /api 开头。编辑 src/app.jsx</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/app.jsx</span></span><br><span class="line"><span class="keyword">const</span> appConfig = &#123;</span><br><span class="line">  app: &#123;</span><br><span class="line">    rootId: <span class="string">'ice-container'</span>,</span><br><span class="line">    addProvider: <span class="function">(<span class="params">&#123; children &#125;</span>) =&gt;</span> &lt;LocaleProvider locale=&#123;locale&#125;&gt;&#123;children&#125;&lt;<span class="regexp">/LocaleProvider&gt;,</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  /</span><span class="regexp">/ 配置 request</span></span><br><span class="line"><span class="regexp">  request: &#123;</span></span><br><span class="line"><span class="regexp">    baseURL: '/</span>api<span class="string">'</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br></pre></td></tr></table></figure><p>此时运行项目查看效果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run start</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599104099586-e35c0a8b-7384-4deb-9dad-6c867635a0e4.png#align=left&display=inline&height=2079&margin=%5Bobject%20Object%5D&name=icejs8.png&originHeight=2079&originWidth=3874&size=450837&status=done&style=none&width=3874" alt="icejs8.png"></p><h4 id="Mock-数据"><a href="#Mock-数据" class="headerlink" title="Mock 数据"></a>Mock 数据</h4><p>此时数据均为空，service 发起的请求均为 404 not found。因具体的数据需要服务端支持，暂时可通过 mock 数据查看效果。<br>编辑 build.json 使得 request 指向 mock 服务 <a href="https://easy-mock.bookset.io/mock/5f4f05642ff5d50508b3d21b/todos_mock" target="_blank" rel="noopener">https://easy-mock.bookset.io/mock/5f4f05642ff5d50508b3d21b/todos_mock</a></p><blockquote><p>该 mock 服务只提供 Todo 及用户列表查询，Todo 增删改查无效。</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// build.json</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">"proxy"</span>: &#123;</span><br><span class="line">    <span class="attr">"/api"</span>: &#123;</span><br><span class="line">      <span class="attr">"enable"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"target"</span>: <span class="string">"https://easy-mock.bookset.io/mock/5f4f05642ff5d50508b3d21b/todos_mock"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看效果<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599104513719-ac84fda3-8b1f-4c5d-8f84-3b59e52cd94f.png#align=left&display=inline&height=1984&margin=%5Bobject%20Object%5D&name=icejs11.png&originHeight=1984&originWidth=1920&size=171944&status=done&style=none&width=1920" alt="icejs11.png"></p><h3 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h3><p>只有登录用户才能访问用户管理页和 Todo 页，未登录用户应重定向到登录页。要实现该逻辑，需要对各页面设置权限。</p><p>权限管理主要通过 icejs 插件 <a href="https://ice.work/docs/guide/advance/auth" target="_blank" rel="noopener">build-plugin-ice-auth</a> 实现。</p><p>需要安装该插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install build-plugin-ice-auth --save-dev</span><br></pre></td></tr></table></figure><p>并配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// build.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"plugins"</span>: [</span><br><span class="line">    <span class="string">"build-plugin-ice-auth"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="项目逻辑"><a href="#项目逻辑" class="headerlink" title="项目逻辑"></a>项目逻辑</h4><p>在本项目中权限管理的逻辑主要包括：</p><ol><li><p><a href="https://github.com/ice-lab/miniapp-admin/blob/master/client/src/app.jsx#L12" target="_blank" rel="noopener">页面加载时从服务端获取权限数据</a></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.jsx</span></span><br><span class="line"><span class="keyword">import</span> authService <span class="keyword">from</span> <span class="string">'@/services/auth'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> appConfig = &#123;</span><br><span class="line">  app: &#123;</span><br><span class="line">    <span class="comment">// 页面初始化时获取权限数据</span></span><br><span class="line">    getInitialData: <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> roles = <span class="keyword">await</span> authService.getRoles();</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        auth: &#123;</span><br><span class="line">          roles</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>创建<a href="https://github.com/ice-lab/miniapp-admin/blob/master/client/src/components/Auth/index.jsx" target="_blank" rel="noopener">权限管理组件</a>，并<a href="https://github.com/ice-lab/miniapp-admin/blob/master/client/src/layouts/BasicLayout/index.jsx#L92" target="_blank" rel="noopener">管理相应页面</a><br>权限管理组件 src/components/Auth</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/components/Auth/index.jsx</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useAuth, Redirect &#125; <span class="keyword">from</span> <span class="string">'ice'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> WrapperPage = <span class="function">(<span class="params">PageComponent</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> WrappedPage = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> [auth] = useAuth();</span><br><span class="line">    <span class="comment">// 页面鉴权 根据权限进行页面跳转</span></span><br><span class="line">    <span class="keyword">const</span> needAuth = !auth.roles.includes(<span class="string">'user'</span>);</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      needAuth ? &lt;Redirect to="/user/login" /&gt; : &lt;PageComponent &#123;...props&#125; /&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;;</span><br><span class="line">  return WrappedPage;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">export default WrapperPage;</span><br></pre></td></tr></table></figure></li><li><p>使用 Auth 组件管理 BasicLayout</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/layouts/BasicLayout/index.jsx</span></span><br><span class="line"><span class="keyword">import</span> Auth <span class="keyword">from</span> <span class="string">'@/components/Auth'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 具体布局组件</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">BasicLayout</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="comment">// ... 省略逻辑</span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 Auth 组件包装 BasicLayout</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Auth(BasicLayout)</span><br></pre></td></tr></table></figure></li><li><p>添加登录/登出逻辑</p></li></ol><p>从<a href="https://github.com/ice-lab/icejs-miniapp-admin/client" target="_blank" rel="noopener">后台管理系统代码</a>中复制相应页面<br>替换 src/pages/Login：接入登录接口<br>替换 src/layouts/BasicLayout：接入登出接口，更改UI</p><ol start="5"><li>运行项目查看效果</li></ol><ul><li>访问 <a href="http://localhost:3333/#/user/login" target="_blank" rel="noopener">http://localhost:3333</a> 跳转至 <a href="http://localhost:3333/#/user/login" target="_blank" rel="noopener">http://localhost:3333/#/user/login</a></li><li>登录-&gt;首页</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599106556546-bd8421c8-8900-4934-8c4a-0f39bb83da70.png#align=left&display=inline&height=2079&margin=%5Bobject%20Object%5D&name=icejs15.png&originHeight=2079&originWidth=1917&size=257208&status=done&style=none&width=1917" alt="icejs15.png"></p><ul><li>登出-&gt;登录页</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599106580084-e23119f8-0f77-49b1-956a-803061c6abec.png#align=left&display=inline&height=2079&margin=%5Bobject%20Object%5D&name=icejs16.png&originHeight=2079&originWidth=1918&size=265517&status=done&style=none&width=1918" alt="icejs16.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>本文介绍了后台管理系统的搭建。内容主要包括页面权限管理方案的实现，渲染通过数据请求获取到的数据。</p><p>Todo 的增删改查功能需要搭配服务端使用，该部分内容详见服务端篇。</p><p>后台管理系统代码见 <a href="https://github.com/ice-lab/icejs-miniapp-admin/client" target="_blank" rel="noopener">icejs-miniapp-admin/client</a>，可结合服务端 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">icejs-miniapp-admin/server</a> 一起运行查看效果。</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ul><li><a href="https://ice.work/" target="_blank" rel="noopener">飞冰</a></li><li><a href="https://ice.work/docs/miniprogram/start" target="_blank" rel="noopener">icejs 小程序官方文档</a></li><li><a href="https://github.com/ice-lab/miniprogram-materials/tree/master/scaffolds/todos" target="_blank" rel="noopener">Todos 小程序代码</a></li><li><a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/client" target="_blank" rel="noopener">Todos 后台管理系统代码</a></li><li><a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">Todos 服务端代码</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何同时开发小程序-中后台应用-feat-icejs-后台管理系统篇&quot;&gt;&lt;a href=&quot;#如何同时开发小程序-中后台应用-feat-icejs-后台管理系统篇&quot; class=&quot;headerlink&quot; title=&quot;如何同时开发小程序+中后台应用(feat: ic
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>icejs-todos-miniprogram</title>
    <link href="https://lancezhu.github.io/2020/10/12/icejs-todos-miniprogram/"/>
    <id>https://lancezhu.github.io/2020/10/12/icejs-todos-miniprogram/</id>
    <published>2020-10-12T09:45:11.000Z</published>
    <updated>2020-10-12T09:45:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何同时开发小程序-中后台应用-feat-icejs-小程序篇"><a href="#如何同时开发小程序-中后台应用-feat-icejs-小程序篇" class="headerlink" title="如何同时开发小程序+中后台应用(feat: icejs) - 小程序篇"></a>如何同时开发小程序+中后台应用(feat: icejs) - 小程序篇</h1><blockquote><p>知乎：<a href="https://zhuanlan.zhihu.com/p/216507810" target="_blank" rel="noopener">使用 React + icejs 开发一个完整的 Todo 应用 - 小程序篇</a><br>语雀：<a href="https://www.yuque.com/f00bar/bsa44q/gfw19c" target="_blank" rel="noopener">如何同时开发小程序+中后台应用(feat: icejs) - 小程序篇</a></p></blockquote><blockquote><p><a href="https://ice.work/" target="_blank" rel="noopener">icejs</a> 主要应用场景为开发中后台应用。但 <a href="mailto:icejs@1.7.0">icejs@1.7.0</a> 版本开始支持<a href="https://ice.work/docs/miniprogram/start" target="_blank" rel="noopener">小程序开发</a>。如果你想使用 React 同时开发中后台应用和小程序，那么 icejs 即可满足你。使用同一套技术体系，减少技术切换成本，提高研发效率。</p></blockquote><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文将演示如何使用 icejs 构建 Todo 小程序 + 后台管理系统，同时包括相应服务端。</p><p>Todo 应用的功能或需求为：</p><ul><li>小程序端：展示 Todo 列表，支持增删改查，以及同步数据到服务端。</li><li>后台管理系统：小程序用户信息和增删改查的管理系统。</li></ul><p>整体的技术栈设计如下：</p><ul><li>*<em>小程序 *</em><ul><li>icejs 框架</li><li>universal-request 数据请求</li></ul></li><li><strong>后台管理系统</strong><ul><li>icejs 框架</li><li>icejs build-plugin-ice-auth 插件，权限管理</li><li>fusion design UI 组件库</li></ul></li><li><strong>服务端</strong> + <strong>数据库</strong><ul><li>eggjs 服务端框架</li><li>egg-sequelize + mysql2 用于 eggjs 连接 MySQL 数据库</li><li>MySQL 数据库</li><li>uuid 唯一 id 生成</li></ul></li></ul><p>因篇幅较长，如何同时开发小程序+中后台应用（feat: icejs）将分为三篇分别介绍。</p><ul><li>小程序篇（本文）</li></ul><p>使用 icejs 开发 Todo 小程序。</p><ul><li>后台管理系统篇</li></ul><p>使用 icejs 开发 Todo 小程序后台管理系统。</p><ul><li>服务端篇</li></ul><p>搭建服务 Todo 小程序及后台管理系统的服务端。</p><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><blockquote><p>项目代码见：<a href="https://github.com/ice-lab/miniprogram-materials/tree/master/scaffolds/todos" target="_blank" rel="noopener">miniprogram-materials/scaffolds/todos</a><br>小程序开发基于icejs，详细内容见 <a href="https://github.com/ice-lab/miniprogram-materials/tree/master/scaffolds/todos" target="_blank" rel="noopener">icejs 小程序开发文档</a></p></blockquote><h3 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h3><p>创建文件夹存放代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir todos &amp;&amp; <span class="built_in">cd</span> todos</span><br></pre></td></tr></table></figure><p>基于 icejs 小程序 JavaScript 模板初始化项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm init ice . <span class="comment"># 在当前目录下初始项目</span></span><br></pre></td></tr></table></figure><p>选择 JavaScript 小程序模板即 Lightweight JavaScript template with miniapp Program</p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598521001177-8b125520-f5d4-46f2-a6f8-598e2150ffed.png#align=left&display=inline&height=192&margin=%5Bobject%20Object%5D&originHeight=192&originWidth=471&status=done&style=none&width=471" alt=""></p><p>启动项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install &amp;&amp; npm run start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从微信开发者工具中导入构建完成后的产物可以看到项目正常运行</span></span><br><span class="line"><span class="comment"># 构建产物位置位于 ./build 目录中。./build/miniapp 为支付宝小程序；./build/wechat-miniprogram 为微信小程序</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html" target="_blank" rel="noopener">微信开发者工具下载</a><br><a href="https://render.alipay.com/p/f/fd-jwq8nu2a/pages/home/index.html" target="_blank" rel="noopener">支付宝小程序开发工具下载</a></p></blockquote><p>使用微信开发者工具管理小程序<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598931377928-a0bf4ffa-3dad-4bc7-81c7-18b5d0d8d087.png#align=left&display=inline&height=344&margin=%5Bobject%20Object%5D&name=image.png&originHeight=688&originWidth=1016&size=108179&status=done&style=none&width=508" alt="image.png"><br>导入构建的小程序包</p><blockquote><p>此处 AppID 应填写自己所申请的小程序 AppID 或使用 测试号</p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598931459380-01eb51a3-e13f-436b-9ff9-a7fe90111b59.png#align=left&display=inline&height=345&margin=%5Bobject%20Object%5D&name=image.png&originHeight=689&originWidth=1015&size=45416&status=done&style=none&width=507.5" alt="image.png"><br>开发者工具中小程序编译成功<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598931572145-a4d6e362-5612-4fcb-87c9-b324ee4db9cb.png#align=left&display=inline&height=511&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1022&originWidth=1916&size=170663&status=done&style=none&width=958" alt="image.png"><br>项目目录结构为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── .ice&#x2F;                          # 运行时生成的临时目录</span><br><span class="line">├── build&#x2F;                         # 构建产物目录</span><br><span class="line">├── src&#x2F;                           # 源码目录</span><br><span class="line">│    ├── components                # 应用的公共组件</span><br><span class="line">│    │     └── Logo             </span><br><span class="line">│    │       ├── index.module.less # Logo 组件的样式文件</span><br><span class="line">│    │       └── index.jsx         # Logo 组件 JSX 源码           </span><br><span class="line">│    └── pages                     # 页面</span><br><span class="line">│    │     └── Home                # home 页面</span><br><span class="line">│    │         └── index.jsx</span><br><span class="line">│    ├── app.js                    # 应用入口文件</span><br><span class="line">│    └── app.json                  # 应用配置，包括路由配置，小程序 window 配置等</span><br><span class="line">├── README.md                      # 项目说明</span><br><span class="line">├── build.json                     # 项目构建配置</span><br><span class="line">├── package.json</span><br><span class="line">└── tsconfig.json</span><br></pre></td></tr></table></figure><h3 id="页面编写"><a href="#页面编写" class="headerlink" title="页面编写"></a>页面编写</h3><p>页面编写与使用 React 开发基本一致。</p><p>对于小程序中的生命周期函数，可使用 <code>usePageShow</code>、<code>usePageHide</code> 或者 <code>withPageLifeCycle</code> 等方法进行监听。详细文档见<a href="">页面配置#生命周期</a>。</p><h4 id="Todos-列表页"><a href="#Todos-列表页" class="headerlink" title="Todos 列表页"></a>Todos 列表页</h4><p><strong>创建 src/pages/todos 编写 UI</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123; useState &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; usePageShow &#125; <span class="keyword">from</span> <span class="string">'ice'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> AddButton <span class="keyword">from</span> <span class="string">'@/components/add-button'</span>; <span class="comment">// 组件：添加新 Todo按钮</span></span><br><span class="line"><span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">'@/public/logo.svg'</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./index.module.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Todos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// state</span></span><br><span class="line">  <span class="keyword">const</span> [userInfo, setUserInfo] = useState(&#123;&#125;);</span><br><span class="line">  <span class="keyword">const</span> [todos, setTodos] = useState([]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// handlers</span></span><br><span class="line">  <span class="keyword">const</span> onTodoChange = <span class="keyword">async</span> id =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> changedContent = &#123;&#125;;</span><br><span class="line">    <span class="keyword">const</span> changedTodos = todos.map(<span class="function"><span class="params">todo</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">id</span>: curId &#125; = todo;</span><br><span class="line">      <span class="keyword">const</span> &#123; completed &#125; = todo.content;</span><br><span class="line">      <span class="keyword">if</span> (id === curId) &#123;</span><br><span class="line">        changedContent = &#123;</span><br><span class="line">          ...todo.content,</span><br><span class="line">          completed: id === curId ? !completed : completed</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...todo,</span><br><span class="line">        content: &#123;</span><br><span class="line">          ...todo.content,</span><br><span class="line">          completed: id === curId ? !completed : completed</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    setTodos(changedTodos);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// lifecycle function</span></span><br><span class="line">  usePageShow(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> defaultTodos = [</span><br><span class="line">      &#123;</span><br><span class="line">        content: &#123; <span class="attr">text</span>: <span class="string">'Learning Javascript'</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        id: <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        content: &#123; <span class="attr">text</span>: <span class="string">'Learning ES2016'</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        id: <span class="number">1</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        content: &#123; <span class="attr">text</span>: <span class="string">'Learning 小程序'</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">        id: <span class="number">2</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 暂时使用默认 Todos 测试 UI</span></span><br><span class="line">    setTodos(defaultTodos);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;styles[<span class="string">'page-todos'</span>]&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;styles.user&#125;&gt;</span><br><span class="line">        &lt;button type=<span class="string">'button'</span> className=&#123;styles[<span class="string">'login-button'</span>]&#125; &gt;</span><br><span class="line">          &lt;div style=&#123;&#123;<span class="attr">display</span>: <span class="string">'flex'</span>, <span class="attr">flexDirection</span>: <span class="string">'column'</span>&#125;&#125;&gt;</span><br><span class="line">            &lt;img className=&#123;styles.avatar&#125; src=&#123;userInfo.avatarUrl ? userInfo.avatarUrl : logo&#125; alt=<span class="string">"用户头像"</span> /&gt;</span><br><span class="line">            &lt;span className=&#123;styles.nickname&#125;&gt;&#123;userInfo.nickName ? <span class="string">`<span class="subst">$&#123;userInfo.nickName&#125;</span>'s`</span> : <span class="string">'My'</span> &#125; Todo List&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;div className=&#123;styles[<span class="string">'todo-items'</span>]&#125;&gt;</span><br><span class="line">        &lt;div className=&#123;styles[<span class="string">'todo-items-group'</span>]&#125;&gt;</span><br><span class="line">          &#123;</span><br><span class="line">            todos.map(<span class="function"><span class="params">todo</span> =&gt;</span> (</span><br><span class="line">              &lt;div style=&#123;&#123;<span class="attr">position</span>: <span class="string">'relative'</span>&#125;&#125; key=&#123;todo.id&#125;&gt;</span><br><span class="line">                &lt;div</span><br><span class="line">                  className=&#123;<span class="string">`<span class="subst">$&#123;styles[<span class="string">'todo-item'</span>]&#125;</span> <span class="subst">$&#123;todo.content.completed ? styles.checked : <span class="string">''</span>&#125;</span>`</span>&#125;</span><br><span class="line">                  onClick=&#123;() =&gt; onTodoChange(todo.id)&#125;</span><br><span class="line">                &gt;</span><br><span class="line">                  &lt;checkbox className=&#123;styles[<span class="string">'todo-item-checkbox'</span>]&#125; checked=&#123;todo.content.completed&#125; /&gt;</span><br><span class="line">                  &lt;span className=&#123;styles[<span class="string">'todo-item-text'</span>]&#125;&gt;&#123;todo.content.text&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>div&gt;</span><br><span class="line">                &lt;div</span><br><span class="line">                  className=&#123;styles[<span class="string">'close-wrapper'</span>]&#125;</span><br><span class="line">                  &gt;</span><br><span class="line">                  &lt;div className=&#123;styles.close&#125;/&gt;</span><br><span class="line">                &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>div&gt;</span><br><span class="line">            ))</span><br><span class="line">          &#125;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div className=&#123;styles[<span class="string">'todo-footer'</span>]&#125;&gt;</span><br><span class="line">        &lt;AddButton text=<span class="string">"Add Todo"</span> /&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Todos;</span><br></pre></td></tr></table></figure><p><strong>添加样式</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line">// src/pages/todos/index.module.scss</span><br><span class="line"><span class="selector-tag">page</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#323239</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"pingFang SC"</span> <span class="string">"pingFang"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#323239</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"pingFang SC"</span> <span class="string">"pingFang"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.page-todos</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"pingFang SC"</span> <span class="string">"pingFang"</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.user</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-button</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.login-button</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.avatar</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">130</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">130</span>rpx;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#FFF</span>;</span><br><span class="line">  <span class="attribute">align-self</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.nickname</span> &#123;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-items</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">34</span>rpx;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">120</span>rpx;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0EFFD6</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-items-group</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">padding-left</span>:<span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">70</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">rgb</span>(14, 255, 214);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="comment">/* white-space:nowrap; */</span></span><br><span class="line"></span><br><span class="line">  <span class="attribute">transition</span>: border <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">12</span>rpx;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">45</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">45</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(14, 222, 255, 0.3);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-50%);</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transition</span>: background-color <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">29</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">8</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">18</span>rpx;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-60%) <span class="built_in">rotate</span>(38deg);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">4</span>rpx solid <span class="number">#FFF</span>;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">4</span>rpx <span class="number">4</span>rpx <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transition</span>: opacity <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item-checkbox</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checked</span> <span class="selector-class">.todo-item-text</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: line-through;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1AA0B8</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checked</span><span class="selector-class">.todo-item</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">rgba</span>(14, 222, 255, 0.2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checked</span><span class="selector-class">.todo-item</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(14, 222, 255, 0.2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.checked</span><span class="selector-class">.todo-item</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item-operation</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#FFF</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-item-operation</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.close-wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">80</span>rpx;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">20</span>rpx;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">20</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.close</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">40</span>rpx;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(14, 222, 255, 0.3);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.close</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2c2c2c</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8</span>rpx;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30</span>rpx;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%) <span class="built_in">rotate</span>(45deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.close</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#2c2c2c</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">8</span>rpx;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30</span>rpx;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">4</span>rpx;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%) <span class="built_in">rotate</span>(-45deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-footer</span> &#123;</span><br><span class="line">  <span class="attribute">flex-shrink</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50</span>rpx <span class="number">0</span> <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">48</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">200</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编写所需组件 add-button</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/components/add-button/index.jsx</span></span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./index.module.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">AddButton</span> (<span class="params">props</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; text, onClickMe &#125; = props;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;button type=<span class="string">'button'</span> className=&#123;styles[<span class="string">'add-button'</span>]&#125; onClick=&#123;onClickMe&#125;&gt;</span><br><span class="line">      &lt;span className=&#123;styles[<span class="string">'add-icon'</span>]&#125;&gt;+<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">      &lt;span&gt;&#123;text&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>button&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> AddButton;</span><br></pre></td></tr></table></figure><p><strong>为组件添加样式</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/components/add-button/index.module.scss</span></span><br><span class="line">.add-button &#123;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  background: none;</span><br><span class="line">  color: #FFF;</span><br><span class="line">  border: none;</span><br><span class="line">  width: <span class="number">300</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.add-button:after &#123;</span><br><span class="line">  content: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.add-icon &#123;</span><br><span class="line">  font-size: <span class="number">52</span>rpx;</span><br><span class="line">  color: #00FFD6;</span><br><span class="line">  margin-right: <span class="number">10</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>添加 logo 图片</strong><br>src/public/logo.svg</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg xmlns=<span class="string">"http://www.w3.org/2000/svg"</span> viewBox=<span class="string">"-11.5 -10.23174 23 20.46348"</span>&gt;</span><br><span class="line">  &lt;title&gt;React Logo&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">  &lt;circle cx="0" cy="0" r="2.05" fill="#61dafb"/</span>&gt;</span><br><span class="line">  &lt;g stroke=<span class="string">"#61dafb"</span> stroke-width=<span class="string">"1"</span> fill=<span class="string">"none"</span>&gt;</span><br><span class="line">    &lt;ellipse rx=<span class="string">"11"</span> ry=<span class="string">"4.2"</span>/&gt;</span><br><span class="line">    &lt;ellipse rx=<span class="string">"11"</span> ry=<span class="string">"4.2"</span> transform=<span class="string">"rotate(60)"</span>/&gt;</span><br><span class="line">    &lt;ellipse rx=<span class="string">"11"</span> ry=<span class="string">"4.2"</span> transform=<span class="string">"rotate(120)"</span>/&gt;</span><br><span class="line">  &lt;<span class="regexp">/g&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>svg&gt;</span><br></pre></td></tr></table></figure><p><strong>添加路由</strong><br>编辑 src/app.json</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"routes"</span>: [ // 页面路由数组</span><br><span class="line">    &#123;</span><br><span class="line">      "path": "/todos",  // /todos 路由</span><br><span class="line">      "source": "pages/todos/index" // 实际 React 组件，即上面所写组件</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>构建小程序</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm run start <span class="comment"># 构建小程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将构建产物 ./build/wechat-miniprogram 导入至微信开发者工具中</span></span><br></pre></td></tr></table></figure><p>小程序开发者工具进行编译，实际效果为：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598962296957-1a3b3424-96af-4052-9b78-65457af2956b.png#align=left&display=inline&height=710&margin=%5Bobject%20Object%5D&name=image.png&originHeight=710&originWidth=399&size=45216&status=done&style=none&width=399" alt="image.png"><br>切换 Todo 完成状态<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598962311241-f7112c35-8ea1-4ff4-b89c-add990a04713.png#align=left&display=inline&height=709&margin=%5Bobject%20Object%5D&name=image.png&originHeight=709&originWidth=400&size=45554&status=done&style=none&width=400" alt="image.png"><br>Todos 列表页面样式完成。可切换 Todo 完成情况。</p><h4 id="添加-Todo-页"><a href="#添加-Todo-页" class="headerlink" title="添加 Todo 页"></a>添加 Todo 页</h4><p><strong>编写 UI</strong></p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/pages/add-todo/index.jsx</span></span><br><span class="line"><span class="keyword">import</span> React, &#123; useState &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> AddButton <span class="keyword">from</span> <span class="string">'@/components/add-button'</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./index.module.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AddTodo = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// state</span></span><br><span class="line">  <span class="keyword">const</span> [value, setValue] = useState(<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// handlers</span></span><br><span class="line">  <span class="keyword">const</span> onChange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    setValue(e.target.value);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 省略添加 Todo 逻辑</span></span><br><span class="line">  <span class="keyword">const</span> add = <span class="keyword">async</span> () =&gt; &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;styles[<span class="string">'page-add-todo'</span>]&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;styles[<span class="string">'add-todo'</span>]&#125;&gt;</span><br><span class="line">        &lt;input</span><br><span class="line">          className=&#123;styles[<span class="string">'add-todo-input'</span>]&#125;</span><br><span class="line">          placeholder=<span class="string">"What needs to be done?"</span></span><br><span class="line">          value=&#123;value&#125;</span><br><span class="line">          onChange=&#123;() =&gt; &#123;&#125;&#125;</span><br><span class="line">          onInput=&#123;onChange&#125; /&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      &lt;div className=&#123;styles['todo-footer']&#125;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;AddButton text="Add Todo" onClickMe=&#123;add&#125;/</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> AddTodo;</span><br></pre></td></tr></table></figure><p><strong>添加样式</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">// src/pages/add-todo/index.module.scss</span><br><span class="line"><span class="selector-tag">page</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#323239</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"pingFang SC"</span> <span class="string">"pingFang"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.page-add-todo</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">"pingFang SC"</span> <span class="string">"pingFang"</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">750</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.add-todo</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">flex-grow</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.add-todo-input</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">50</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">100</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">border</span>:none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#DFDFDF</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0EFFD6</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.todo-footer</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50</span>rpx <span class="number">0</span> <span class="number">100</span>rpx;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">48</span>rpx;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">200</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置路由</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"routes"</span>: [</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="attr">"path"</span>: <span class="string">"/add-todo"</span>,</span><br><span class="line">      <span class="attr">"source"</span>: <span class="string">"pages/add-todo/index"</span></span><br><span class="line">    &#125;，</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"path"</span>: <span class="string">"/todos"</span>,</span><br><span class="line">      <span class="attr">"source"</span>: <span class="string">"pages/todos/index"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>微信小程序开发者工具中执行自定义编译</strong></p><ul><li>添加编译模式</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598962397413-735fe7cc-aa62-4f6d-a057-2e684d6cd649.png#align=left&display=inline&height=1027&margin=%5Bobject%20Object%5D&name=mp3.png&originHeight=1027&originWidth=1916&size=190538&status=done&style=none&width=1916" alt="mp3.png"></p><ul><li>配置启动页面为 pages/add-todo/index</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598962502120-9a9a2d4f-b951-479d-8652-477896eead25.png#align=left&display=inline&height=1023&margin=%5Bobject%20Object%5D&name=mp4.png&originHeight=1023&originWidth=1920&size=183598&status=done&style=none&width=1920" alt="mp4.png"><br>编译后可看到添加 Todo 页面效果<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598962525365-97c4d6f9-d180-4bc8-bda7-f88518ac119d.png#align=left&display=inline&height=358&margin=%5Bobject%20Object%5D&name=image.png&originHeight=715&originWidth=397&size=25057&status=done&style=none&width=198.5" alt="image.png">)<img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598962542690-911bb7a4-0ad6-4e75-9de7-a26687f3559a.png#align=left&display=inline&height=357&margin=%5Bobject%20Object%5D&name=image.png&originHeight=714&originWidth=403&size=21665&status=done&style=none&width=201.5" alt="image.png"><br><strong>此时的目录结构为：</strong></p><blockquote><p>原有 Logo 组件及 Home 页面未使用可删除。</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── public</span><br><span class="line">│   └── index.html</span><br><span class="line">├── src</span><br><span class="line">│   ├── components</span><br><span class="line">│   │   └── add-button     // 新增组件 add-button</span><br><span class="line">│   ├── pages</span><br><span class="line">│   │   ├── add-todo       // 新增页面 add-todo</span><br><span class="line">│   │   └── todos          // 新增页面 todos</span><br><span class="line">│   ├── public</span><br><span class="line">│   │   └── logo.svg       // 新增 logo 图片</span><br><span class="line">│   ├── app.js</span><br><span class="line">│   └── app.json</span><br><span class="line">├── .eslintrc.js</span><br><span class="line">├── .gitignore</span><br><span class="line">├── README.md</span><br><span class="line">├── build.json</span><br><span class="line">├── mini.project.json</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">└── tsconfig.json</span><br></pre></td></tr></table></figure><h3 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h3><p>与编写 Web 应用不同的是，需要为小程序增加一些配置。如页面路由、tabBar、页面标题等小程序特有属性。</p><p>本程序配置如下：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// app.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"routes"</span>: [ // 页面路由</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"path"</span>: <span class="string">"/todos"</span>,</span><br><span class="line">      <span class="attr">"source"</span>: <span class="string">"pages/todos/index"</span> // React 组件</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"path"</span>: <span class="string">"/add-todo"</span>,</span><br><span class="line">      <span class="attr">"source"</span>: <span class="string">"pages/add-todo/index"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  "window": &#123; // 页面标题、颜色</span><br><span class="line">    "title": "Todo App",</span><br><span class="line">    "titleBarColor": "#323239"</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可看到头部颜色及标题发生变化<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1598963028284-83c512f9-1fb0-4c72-b3c0-b79aa4c84006.png#align=left&display=inline&height=715&margin=%5Bobject%20Object%5D&name=mp-window.png&originHeight=715&originWidth=850&size=61654&status=done&style=none&width=850" alt="mp-window.png"></p><h3 id="数据请求"><a href="#数据请求" class="headerlink" title="数据请求"></a>数据请求</h3><p>通过与后台 API 接口交互将 Todos 同步到远程数据库中。需要用到 universal-request，该库对数据请求进行了封装，使得用户无需关心 web端、微信小程序、支付宝小程序等多平台差异。一套代码、多处运行。</p><h4 id="以获取某用户的-Todos-为例"><a href="#以获取某用户的-Todos-为例" class="headerlink" title="以获取某用户的 Todos 为例"></a>以获取某用户的 Todos 为例</h4><blockquote><p>相关接口见后文服务端</p></blockquote><p>安装 universal-request</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install universal-request</span><br></pre></td></tr></table></figure><p>定义数据请求 service</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/services/todos.js</span></span><br><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">'universal-request'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处为 mock 接口，仅包含查询固定 todos 列表。其他功能如对小程序的增删改查需要服务端</span></span><br><span class="line"><span class="keyword">const</span> URL_PREFIX = <span class="string">'https://easy-mock.bookset.io/mock/5f4f05642ff5d50508b3d21b/todos_mock'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">// 根据用户 openId 获取对应 todo 列表</span></span><br><span class="line">  <span class="keyword">async</span> list (&#123; openId &#125;) &#123;</span><br><span class="line">      <span class="keyword">let</span> todos = [];</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="comment">// openId 未使用，可随意填写</span></span><br><span class="line">          <span class="keyword">const</span> URL = <span class="string">`<span class="subst">$&#123;URL_PREFIX&#125;</span>/api/mp/todos?openId=<span class="subst">$&#123;openId&#125;</span>`</span>;</span><br><span class="line">          <span class="keyword">const</span> res = <span class="keyword">await</span> request(&#123;</span><br><span class="line">              url: URL</span><br><span class="line">          &#125;);</span><br><span class="line">          todos = res.data.data.todos;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          <span class="built_in">console</span>.error(err);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> todos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Todos 组件中调用该数据请求 service，移除默认 Todos</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// src/pages/todos/index.jsx</span><br><span class="line"><span class="addition">+ import todosService from '@/services/todos'; // 引入 todos service</span></span><br><span class="line"></span><br><span class="line">const Todos = () =&gt; &#123;</span><br><span class="line">  // ...</span><br><span class="line">  // lifecycle function</span><br><span class="line">  // usePageShow 函数修改如下</span><br><span class="line">  usePageShow(async () =&gt; &#123;</span><br><span class="line">    // 通过数据请求获取 Todos 数据</span><br><span class="line">    const todos = await todosService.list(1); // 1 为 openId，暂时未使用可随意填写</span><br><span class="line">    setTodos(todos);</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  return (</span><br><span class="line">    // 渲染 todos</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>编译</p><blockquote><p>注意应在微信开发者工具中开启<strong>不校验合法域名</strong></p></blockquote><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599028238912-aa9c1d35-bdfd-4a63-8ff2-21bcfd95a90e.png#align=left&display=inline&height=1028&margin=%5Bobject%20Object%5D&name=mp5.png&originHeight=1028&originWidth=1913&size=181778&status=done&style=none&width=1913" alt="mp5.png"><br>执行编译后可得<br><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599028284047-baa3a7c1-4ffd-4b76-90d1-06ae6d034c71.png#align=left&display=inline&height=713&margin=%5Bobject%20Object%5D&name=image.png&originHeight=713&originWidth=401&size=44389&status=done&style=none&width=401" alt="image.png"><br>对于 Todos 列表的增删改查操作需要服务端的支持，此处仅使用 Mock 接口验证数据请求。真实请求逻辑可在服务端篇查看。</p><h3 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h3><p>数据请求小节介绍了如何发起数据请求，但数据请求需要相应的服务端，服务端未完成的情况下，Todo 小程序无法完成 Todo 的增删改查。</p><p>本小节使用微信所提供的数据存储服务，将 Todos 持久化，实现 Todo 的增删改查。</p><ul><li><p>新建数据存储 service</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> storageKey = &#123;</span><br><span class="line">  todos: <span class="string">'todos'</span>,</span><br><span class="line">  userInfo: <span class="string">'userInfo'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取存储的 Todos</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getStoredTodos</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> todos;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> wx.getStorage(&#123;</span><br><span class="line">      key: storageKey.todos</span><br><span class="line">    &#125;);</span><br><span class="line">    todos = res.data.todos;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(err);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> todos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储 Todos</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">storeTodos</span> (<span class="params">todos</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">  <span class="keyword">await</span> wx.setStorage(&#123;</span><br><span class="line">    key: storageKey.todos,</span><br><span class="line">    data: &#123;</span><br><span class="line">      todos</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取存储的 userInfo</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getUserInfo</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> userInfo;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> wx.getStorage(&#123;</span><br><span class="line">      key: storageKey.userInfo</span><br><span class="line">    &#125;);</span><br><span class="line">    userInfo = res.data.userInfo;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(err);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> userInfo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储 userInfo</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">setUserInfo</span> (<span class="params">userInfo</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">  <span class="keyword">await</span> wx.setStorage(&#123;</span><br><span class="line">    key: storageKey.userInfo,</span><br><span class="line">    data: &#123;</span><br><span class="line">      userInfo</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  todos: &#123;</span><br><span class="line">    <span class="keyword">get</span>: getStoredTodos,</span><br><span class="line">    <span class="keyword">set</span>: storeTodos</span><br><span class="line">  &#125;,</span><br><span class="line">  userInfo: &#123;</span><br><span class="line">    <span class="keyword">get</span>: getUserInfo,</span><br><span class="line">    <span class="keyword">set</span>: setUserInfo</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>todos 组件和 add-todo 组件添加逻辑</p></li></ul><p>todos 组件：</p><ul><li>增加获取用户信息函数 getUserInfo</li><li>增加初始化 Todos 函数：initTodos</li><li>增加添加 Todo 函数：addTodo</li><li>增加删除 Todo 函数：delTodo</li><li>修改编辑 Todo 函数：onTodoChange<figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/pages/todos/index.jsx</span></span><br><span class="line"><span class="keyword">import</span> React, &#123; useState &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; usePageShow &#125; <span class="keyword">from</span> <span class="string">'ice'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 storage service</span></span><br><span class="line"><span class="keyword">import</span> storageService <span class="keyword">from</span> <span class="string">'@/services/storage'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> AddButton <span class="keyword">from</span> <span class="string">'@/components/add-button'</span>;</span><br><span class="line"><span class="keyword">import</span> logo <span class="keyword">from</span> <span class="string">'@/public/logo.svg'</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./index.module.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> Todos = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// state</span></span><br><span class="line">  <span class="keyword">const</span> [userInfo, setUserInfo] = useState(&#123;&#125;);</span><br><span class="line">  <span class="keyword">const</span> [todos, setTodos] = useState([]);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// handlers</span></span><br><span class="line">  <span class="comment">// user</span></span><br><span class="line">  <span class="keyword">const</span> getUserInfo = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    <span class="keyword">const</span> storedUserInfo = <span class="keyword">await</span> storageService.userInfo.get();</span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> wx.getUserInfo(); <span class="comment">// 获取用户信息</span></span><br><span class="line">    <span class="keyword">const</span> userInfo = res.userInfo;</span><br><span class="line"></span><br><span class="line">    setUserInfo(userInfo);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> storageService.userInfo.set(userInfo);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// todos</span></span><br><span class="line">  <span class="comment">// 添加 Todo</span></span><br><span class="line">  <span class="keyword">const</span> addTodo = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    wx.redirectTo(&#123;</span><br><span class="line">      url: <span class="string">'/pages/add-todo/index'</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 修改 Todo 完成状态</span></span><br><span class="line">  <span class="keyword">const</span> onTodoChange = <span class="keyword">async</span> id =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> changedContent = &#123;&#125;;</span><br><span class="line">    <span class="keyword">const</span> changedTodos = todos.map(<span class="function"><span class="params">todo</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">id</span>: curId &#125; = todo;</span><br><span class="line">      <span class="keyword">const</span> &#123; completed &#125; = todo.content;</span><br><span class="line">      <span class="keyword">if</span> (id === curId) &#123;</span><br><span class="line">        changedContent = &#123;</span><br><span class="line">          ...todo.content,</span><br><span class="line">          completed: id === curId ? !completed : completed</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...todo,</span><br><span class="line">        content: &#123;</span><br><span class="line">          ...todo.content,</span><br><span class="line">          completed: id === curId ? !completed : completed</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    setTodos(changedTodos);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">await</span> storageService.todos.set(changedTodos);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除 Todo</span></span><br><span class="line">  <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">delTodo</span> (<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> changedTodos = todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; <span class="attr">id</span>: curId &#125; = todo;</span><br><span class="line">      <span class="keyword">return</span> id !== curId;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    setTodos(changedTodos);</span><br><span class="line">    <span class="keyword">await</span> storageService.todos.set(changedTodos);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 初始化 Todos</span></span><br><span class="line">  <span class="keyword">const</span> initTodos = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> storedTodos = <span class="keyword">await</span> storageService.todos.get();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> mergedTodos = storedTodos || [];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(storedTodos, mergedTodos);</span><br><span class="line"></span><br><span class="line">    setTodos(mergedTodos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> storageService.todos.set(mergedTodos);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// lifecyle function</span></span><br><span class="line">  usePageShow(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'page show'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    <span class="keyword">const</span> storedUserInfo = <span class="keyword">await</span> storageService.userInfo.get();</span><br><span class="line">    setUserInfo(storedUserInfo || &#123;&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">await</span> initTodos();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;styles[<span class="string">'page-todos'</span>]&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;styles.user&#125;&gt;</span><br><span class="line">        &lt;button type=<span class="string">'button'</span> open-type=<span class="string">"getUserInfo"</span> onClick=&#123;getUserInfo&#125; className=&#123;styles[<span class="string">'login-button'</span>]&#125; &gt;</span><br><span class="line">          &lt;div style=&#123;&#123;<span class="attr">display</span>: <span class="string">'flex'</span>, <span class="attr">flexDirection</span>: <span class="string">'column'</span>&#125;&#125;&gt;</span><br><span class="line">            &lt;img className=&#123;styles.avatar&#125; src=&#123;userInfo.avatarUrl ? userInfo.avatarUrl : logo&#125; alt=<span class="string">"用户头像"</span> /&gt;</span><br><span class="line">            &lt;span className=&#123;styles.nickname&#125;&gt;&#123;userInfo.nickName ? <span class="string">`<span class="subst">$&#123;userInfo.nickName&#125;</span>'s`</span> : <span class="string">'My'</span> &#125; Todo List&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line">      </span><br><span class="line">      &lt;div className=&#123;styles[<span class="string">'todo-items'</span>]&#125;&gt;</span><br><span class="line">        &lt;div className=&#123;styles[<span class="string">'todo-items-group'</span>]&#125;&gt;</span><br><span class="line">          &#123;</span><br><span class="line">            todos.map(<span class="function"><span class="params">todo</span> =&gt;</span> (</span><br><span class="line">              &lt;div style=&#123;&#123;<span class="attr">position</span>: <span class="string">'relative'</span>&#125;&#125; key=&#123;todo.id&#125;&gt;</span><br><span class="line">                &lt;div</span><br><span class="line">                  className=&#123;<span class="string">`<span class="subst">$&#123;styles[<span class="string">'todo-item'</span>]&#125;</span> <span class="subst">$&#123;todo.content.completed ? styles.checked : <span class="string">''</span>&#125;</span>`</span>&#125;</span><br><span class="line">                  onClick=&#123;() =&gt; onTodoChange(todo.id)&#125;</span><br><span class="line">                &gt;</span><br><span class="line">                  &lt;checkbox className=&#123;styles[<span class="string">'todo-item-checkbox'</span>]&#125; checked=&#123;todo.content.completed&#125; /&gt;</span><br><span class="line">                  &lt;span className=&#123;styles[<span class="string">'todo-item-text'</span>]&#125;&gt;&#123;todo.content.text&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>div&gt;</span><br><span class="line">                &lt;div</span><br><span class="line">                  className=&#123;styles[<span class="string">'close-wrapper'</span>]&#125;</span><br><span class="line">                  onClick=&#123;() =&gt; delTodo(todo.id)&#125;&gt;</span><br><span class="line">                  &lt;div className=&#123;styles.close&#125;/&gt;</span><br><span class="line">                &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">              &lt;/</span>div&gt;</span><br><span class="line">            ))</span><br><span class="line">          &#125;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div className=&#123;styles[<span class="string">'todo-footer'</span>]&#125;&gt;</span><br><span class="line">        &lt;AddButton text=<span class="string">"Add Todo"</span> onClickMe=&#123;addTodo&#125; /&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> Todos;</span><br></pre></td></tr></table></figure>add-todo 组件</li></ul><ul><li>修改添加 Todo 函数：add<figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/pages/add-todo/index.jsx</span></span><br><span class="line"><span class="keyword">import</span> React, &#123; useState &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入 storage service</span></span><br><span class="line"><span class="keyword">import</span> storageService <span class="keyword">from</span> <span class="string">'@/services/storage'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> AddButton <span class="keyword">from</span> <span class="string">'@/components/add-button'</span>;</span><br><span class="line"><span class="keyword">import</span> styles <span class="keyword">from</span> <span class="string">'./index.module.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> AddTodo = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// state</span></span><br><span class="line">  <span class="keyword">const</span> [value, setValue] = useState(<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// handlers</span></span><br><span class="line">  <span class="comment">// 输入监听函数</span></span><br><span class="line">  <span class="keyword">const</span> onChange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    setValue(e.target.value);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 添加 Todo</span></span><br><span class="line">  <span class="keyword">const</span> add = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> curTodos = <span class="keyword">await</span> storageService.todos.get();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> todo = &#123;</span><br><span class="line">      id: (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime(),</span><br><span class="line">      content: &#123;</span><br><span class="line">        text: value,</span><br><span class="line">        completed: <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> newTodos = curTodos.concat(todo);</span><br><span class="line">    storageService.todos.set(newTodos);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// eslint-disable-next-line</span></span><br><span class="line">    wx.redirectTo(&#123;</span><br><span class="line">      url: <span class="string">'/pages/todos/index'</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=&#123;styles[<span class="string">'page-add-todo'</span>]&#125;&gt;</span><br><span class="line">      &lt;div className=&#123;styles[<span class="string">'add-todo'</span>]&#125;&gt;</span><br><span class="line">        &lt;input</span><br><span class="line">          className=&#123;styles[<span class="string">'add-todo-input'</span>]&#125;</span><br><span class="line">          placeholder=<span class="string">"What needs to be done?"</span></span><br><span class="line">          value=&#123;value&#125;</span><br><span class="line">          onChange=&#123;() =&gt; &#123;&#125;&#125;</span><br><span class="line">          onInput=&#123;onChange&#125; /&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">      &lt;div className=&#123;styles['todo-footer']&#125;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;AddButton text="Add Todo" onClickMe=&#123;add&#125;/</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> AddTodo;</span><br></pre></td></tr></table></figure>执行编译，运行项目<br>此时，本程序可获取用户基本信息，增加 Todo。</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2020/png/2070295/1599037234361-0165b321-d833-4de3-9ac4-75924cc989b5.png#align=left&display=inline&height=1559&margin=%5Bobject%20Object%5D&name=mp11.png&originHeight=1559&originWidth=1276&size=112351&status=done&style=none&width=1276" alt="mp11.png"></p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>至此，小程序部分已基本完成。</p><p>本文介绍了使用 icejs开发小程序的基本流程，包括使用组件 UI 的编写；路由及其它小程序相关的项目配置；发起数据请求；调用微信小程序 API 获取用户信息和存储数据。</p><p>小程序同步 Todo 列表至服务端需要服务端的配合，故将该功能在服务端篇进行实现。</p><p>小程序代码见 <a href="https://github.com/ice-lab/miniprogram-materials/tree/master/scaffolds/todos" target="_blank" rel="noopener">miniprogram-materials/scaffolds/todos</a>，可结合服务端 <a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">icejs-miniapp-admin/server</a> 一起运行查看效果。</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ul><li><a href="https://ice.work/" target="_blank" rel="noopener">飞冰</a></li><li><a href="https://ice.work/docs/miniprogram/start" target="_blank" rel="noopener">icejs 小程序官方文档</a></li><li><a href="https://github.com/ice-lab/miniprogram-materials/tree/master/scaffolds/todos" target="_blank" rel="noopener">Todos 小程序代码</a></li><li><a href="https://github.com/ice-lab/icejs-miniapp-admin/client" target="_blank" rel="noopener">Todos 后台管理系统代码</a></li><li><a href="https://github.com/ice-lab/icejs-miniapp-admin/tree/master/server" target="_blank" rel="noopener">Todos 服务端代码</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;如何同时开发小程序-中后台应用-feat-icejs-小程序篇&quot;&gt;&lt;a href=&quot;#如何同时开发小程序-中后台应用-feat-icejs-小程序篇&quot; class=&quot;headerlink&quot; title=&quot;如何同时开发小程序+中后台应用(feat: icejs) -
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Emoji-cheatsheet</title>
    <link href="https://lancezhu.github.io/2020/10/12/cheatsheet-emoji/"/>
    <id>https://lancezhu.github.io/2020/10/12/cheatsheet-emoji/</id>
    <published>2020-10-12T09:44:19.000Z</published>
    <updated>2020-10-12T09:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">emoji cheatsheet</a><br><span class="github-emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">&#x1f389;</span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.webfx.com/tools/emoji-cheat-sheet/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;emoji cheatsheet&lt;/a&gt;&lt;br&gt;&lt;span class=&quot;github-emoji
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Java-cheatsheet</title>
    <link href="https://lancezhu.github.io/2020/10/12/cheatsheet-Java/"/>
    <id>https://lancezhu.github.io/2020/10/12/cheatsheet-Java/</id>
    <published>2020-10-12T09:42:14.000Z</published>
    <updated>2020-10-12T09:42:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p><a href="https://www.oracle.com/java/technologies/javase-downloads.html" target="_blank" rel="noopener">java se</a></p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf jdk.tar.gz   // 解压</span><br><span class="line"></span><br><span class="line">$ mkdir /usr/java</span><br><span class="line">$ cp jdk /usr/java -r    // 移动至安装目录</span><br><span class="line"></span><br><span class="line">$ sudo vim /etc/profile // 配置环境变量</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">$ sudo vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/profile or ~/.zshrc</span></span><br><span class="line"><span class="comment"># export JAVA_HOME=/usr/java/jdk</span></span><br><span class="line"><span class="comment"># export JRE_HOME=$JAVA_HOME/jre</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span></span><br><span class="line"></span><br><span class="line">java // 安装验证</span><br></pre></td></tr></table></figure><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><h4 id="Download-1"><a href="#Download-1" class="headerlink" title="Download"></a>Download</h4><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">maven apache</a></p><h4 id="Installation-1"><a href="#Installation-1" class="headerlink" title="Installation"></a>Installation</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装方式为 tar.gz 压缩包形式</span></span><br><span class="line">$ tar -zxvf apache-maven.tar.gz // 解压</span><br><span class="line"></span><br><span class="line">$ mkdir /usr/maven</span><br><span class="line">$ cp apache-maven /usr/maven -r    // 移动至安装目录</span><br><span class="line"></span><br><span class="line">$ sudo vim /etc/profile // 配置环境变量</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">$ sudo vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/profile or ~/.zshrc</span></span><br><span class="line"><span class="comment"># export MAVEN_HOME=/usr/maven/apache-maven</span></span><br><span class="line"><span class="comment"># export PATH=$PATH:$MAVEN_HOME/bin</span></span><br><span class="line"></span><br><span class="line">mvn -V // 安装验证</span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu openjdk</span></span><br><span class="line">$ sudo apt install default-jre</span><br><span class="line">java --version</span><br><span class="line">$ sudo apt install default-jdk</span><br><span class="line">javac --version</span><br></pre></td></tr></table></figure><h4 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim <span class="variable">$MAVEN_HOME</span>/conf/setting.xml</span><br></pre></td></tr></table></figure><p>添加 阿里云 源</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirrors&gt;</span><br><span class="line"><span class="addition">+  &lt;mirror&gt;</span></span><br><span class="line"><span class="addition">+    &lt;id&gt;nexus-aliyun&lt;/id&gt;</span></span><br><span class="line"><span class="addition">+    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span></span><br><span class="line"><span class="addition">+    &lt;name&gt;Nexus aliyun&lt;/name&gt;</span></span><br><span class="line"><span class="addition">+    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span></span><br><span class="line"><span class="addition">+  &lt;/mirror&gt;</span></span><br><span class="line">&lt;mirrors&gt;</span><br></pre></td></tr></table></figure><h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><p><a href="https://tomcat.apache.org/" target="_blank" rel="noopener">官网</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h1&gt;&lt;h2 id=&quot;Download&quot;&gt;&lt;a href=&quot;#Download&quot; class=&quot;headerlink&quot; title=&quot;D
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ssh 访问日志分析</title>
    <link href="https://lancezhu.github.io/2020/08/01/ssh-access-analysis/"/>
    <id>https://lancezhu.github.io/2020/08/01/ssh-access-analysis/</id>
    <published>2020-08-01T05:31:00.000Z</published>
    <updated>2020-08-01T05:31:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSH-访问日志分析"><a href="#SSH-访问日志分析" class="headerlink" title="SSH 访问日志分析"></a>SSH 访问日志分析</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本科毕业，<a href="https://cloud.tencent.com/act/campus" target="_blank" rel="noopener">腾讯云 + 校园</a> 学生认证身份过期，无法享用之前每月仅需一元的优惠，<a href="blog-migration">博客迁移</a> 至 <a href="https://promotion.aliyun.com/ntms/act/campus2018.html?userCode=zxog1qrs&tag=share_component&share_source=copy_link" target="_blank" rel="noopener">阿里云</a>。之前有看到过对服务器 <code>SSH</code>日志分析的一篇文章，故也想做些类似的分析。</p><h2 id="分析内容"><a href="#分析内容" class="headerlink" title="分析内容"></a>分析内容</h2><p><code>SSH</code> 访问数据</p><ul><li><input checked="" disabled="" type="checkbox"> 访问日志总量</li><li><input checked="" disabled="" type="checkbox"> 用户名 top10</li><li><input checked="" disabled="" type="checkbox"> 访问 IP top10</li><li><input disabled="" type="checkbox"> 访问 IP 分布，借助<a href="https://github.com/animalize/qqwry-python3" target="_blank" rel="noopener">纯真数据库</a></li><li><input disabled="" type="checkbox"> <del>访问时间分布</del></li></ul><h2 id="具体分析"><a href="#具体分析" class="headerlink" title="具体分析"></a>具体分析</h2><blockquote><p>本部分比较混乱，可不看，结论见 <code>分析结果</code>。</p></blockquote><h4 id="未清洗数据"><a href="#未清洗数据" class="headerlink" title="未清洗数据"></a>未清洗数据</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">// 统计所有日志文件及文件行数</span><br><span class="line">$ ls | xargs wc -l | awk <span class="string">'&#123;print $2, $1&#125;'</span></span><br><span class="line"></span><br><span class="line">auth.log 70039</span><br><span class="line">auth.log-201905101557440703 444627</span><br><span class="line">auth.log-201905231558563904 419331</span><br><span class="line">auth.log-201906071559859904 417979</span><br><span class="line">auth.log-201906241561328703 412512</span><br><span class="line">auth.log-201907041562192703 415592</span><br><span class="line">auth.log-201907171563315904 426805</span><br><span class="line">auth.log-201907271564179903 422477</span><br><span class="line">auth.log-201908081565216703 405232</span><br><span class="line">auth.log-201908211566339904 408350</span><br><span class="line">auth.log-201909061567722303 426589</span><br><span class="line">auth.log-201909171568672705 400635</span><br><span class="line">auth.log-201910021569968703 390301</span><br><span class="line">auth.log-201910141571005504 393317</span><br><span class="line">auth.log-201910261572042303 414514</span><br><span class="line">auth.log-201911031572733505 401419</span><br><span class="line">auth.log-201911171573943103 410552</span><br><span class="line">auth.log-201911301575066303 420348</span><br><span class="line">auth.log-201912071575671103 423932</span><br><span class="line">auth.log-201912121576103103 395790</span><br><span class="line">auth.log-201912181576621504 453579</span><br><span class="line">auth.log-201912271577399104 403452</span><br><span class="line">auth.log-202001081578435903 469772</span><br><span class="line">auth.log-202001211579559103 399332</span><br><span class="line">auth.log-202002061580941504 409619</span><br><span class="line">auth.log-202003041583274305 390374</span><br><span class="line">total 10446469</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 统计文件大小</span><br><span class="line">$ ls -l | awk <span class="string">'BEGIN &#123;sum=0&#125; NR!=1 &#123;sum+=$5; print $9, $5&#125; END &#123;print "total " sum " " sum/1024/1024 "M"&#125;'</span></span><br><span class="line">auth.log 7235504</span><br><span class="line">auth.log-201905101557440703 46798951</span><br><span class="line">auth.log-201905231558563904 42868529</span><br><span class="line">auth.log-201906071559859904 42887760</span><br><span class="line">auth.log-201906241561328703 43018812</span><br><span class="line">auth.log-201907041562192703 43343508</span><br><span class="line">auth.log-201907171563315904 44048692</span><br><span class="line">auth.log-201907271564179903 43478168</span><br><span class="line">auth.log-201908081565216703 42309178</span><br><span class="line">auth.log-201908211566339904 42010693</span><br><span class="line">auth.log-201909061567722303 45996353</span><br><span class="line">auth.log-201909171568672705 42921548</span><br><span class="line">auth.log-201910021569968703 42086718</span><br><span class="line">auth.log-201910141571005504 42284091</span><br><span class="line">auth.log-201910261572042303 44426083</span><br><span class="line">auth.log-201911031572733505 43654955</span><br><span class="line">auth.log-201911171573943103 43578151</span><br><span class="line">auth.log-201911301575066303 44902797</span><br><span class="line">auth.log-201912071575671103 45356384</span><br><span class="line">auth.log-201912121576103103 41986986</span><br><span class="line">auth.log-201912181576621504 48834325</span><br><span class="line">auth.log-201912271577399104 42789719</span><br><span class="line">auth.log-202001081578435903 49508107</span><br><span class="line">auth.log-202001211579559103 42864190</span><br><span class="line">auth.log-202002061580941504 44967557</span><br><span class="line">auth.log-202003041583274305 41996783</span><br><span class="line">total 1106154542 1054.91M</span><br></pre></td></tr></table></figure><h4 id="清洗数据"><a href="#清洗数据" class="headerlink" title="清洗数据"></a>清洗数据</h4><p><strong>合并文件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls | awk <span class="string">'/^auth.log*/'</span> | xargs cat &gt;&gt; total.log</span><br></pre></td></tr></table></figure><p><strong>筛选无效登录</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">'Failed'</span> total.log &gt; failed_auth/total.log</span><br></pre></td></tr></table></figure><p><strong>统计数据量</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc -l failed_auth/total.log</span><br><span class="line">1977438 failed_auth/total.log</span><br></pre></td></tr></table></figure><p>筛选无效登录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep <span class="string">'invalid'</span> failed_auth/total.log &gt; failed_auth/failed.log</span><br></pre></td></tr></table></figure><p><strong>统计无效用户名</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc -l failed_auth/invalid.log</span><br><span class="line">870098 failed_auth/invalid.log</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat failed_auth/invalid.log | awk <span class="string">'&#123;print $11&#125;'</span> | sort -r | uniq -c | sort -rn | head -10</span><br><span class="line">  59789 admin</span><br><span class="line">  19975 <span class="built_in">test</span></span><br><span class="line">  10894 user</span><br><span class="line">   9207 oracle</span><br><span class="line">   7733 guest</span><br><span class="line">   7318 postgres</span><br><span class="line">   5374 git</span><br><span class="line">   5089 ubnt</span><br><span class="line">   4851 nagios</span><br><span class="line">   4473 support</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">10691 45.136.108.85</span><br><span class="line"> 9469 43.248.189.33</span><br><span class="line"> 6728 95.110.201.243</span><br><span class="line"> 4232 139.217.230.232</span><br><span class="line"> 4187 45.141.86.128</span><br><span class="line"> 3139 193.105.134.96</span><br><span class="line"> 3128 103.82.28.2</span><br><span class="line"> 3032 185.153.199.155</span><br><span class="line"> 2987 185.153.199.125</span><br><span class="line"> 2889 109.89.51.159</span><br></pre></td></tr></table></figure><p><strong>统计有效用户名</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -v <span class="string">'invalid'</span> failed_auth/total.log &gt; failed_auth/valid.log</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc -l failed_auth/valid.log</span><br><span class="line">1107340 failed_auth/valid.log</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -v <span class="string">'repeated'</span> failed_auth/valid.log &gt; failed_auth/valid_without_repeated_message.log</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc -l failed_auth/valid_without_repeated_message.log</span><br><span class="line">1041122 failed_auth/valid_without_repeated_message.log</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat failed_auth/valid_without_repeated_message.log | awk <span class="string">'&#123;print $11&#125;'</span> | sort -r | uniq -c | sort -rn | head -10</span><br><span class="line">  40537 139.198.122.90</span><br><span class="line">  32721 139.198.17.33</span><br><span class="line">  25118 43.248.189.33</span><br><span class="line">  23543 139.198.13.87</span><br><span class="line">  23540 139.219.236.62</span><br><span class="line">  23536 139.199.132.175</span><br><span class="line">  23528 139.199.19.153</span><br><span class="line">  22029 139.217.233.36</span><br><span class="line">  19751 139.219.3.80</span><br><span class="line">  14781 139.198.18.152</span><br></pre></td></tr></table></figure><h2 id="分析结果"><a href="#分析结果" class="headerlink" title="分析结果"></a>分析结果</h2><p><strong>日志基本数据</strong></p><ul><li><p>时间：2019/05 - 2020/03</p></li><li><p>大小：1.1G</p></li><li><p>数据量：</p><ul><li>10446469 条</li></ul></li></ul><p><strong>用户名 top10</strong></p><p>统计访问日志中登录失败用户名 top10。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">test</span><br><span class="line">user</span><br><span class="line">oracle</span><br><span class="line">guest</span><br><span class="line">postgres</span><br><span class="line">git</span><br><span class="line">ubnt</span><br><span class="line">nagios</span><br><span class="line">support</span><br></pre></td></tr></table></figure><p><strong>访问 IP top10</strong></p><p>统计访问日志中登录失败对应 IP top10.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">139.198.122.90</span><br><span class="line">139.198.17.33</span><br><span class="line">43.248.189.33</span><br><span class="line">139.198.13.87</span><br><span class="line">139.219.236.62</span><br><span class="line">139.199.132.175</span><br><span class="line">139.199.19.153</span><br><span class="line">139.217.233.36</span><br><span class="line">139.219.3.80</span><br><span class="line">139.198.18.152</span><br></pre></td></tr></table></figure><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><ul><li><a href="https://coolshell.cn/articles/19219.html" target="_blank" rel="noopener">打造高效的工作环境 – SHELL 篇</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SSH-访问日志分析&quot;&gt;&lt;a href=&quot;#SSH-访问日志分析&quot; class=&quot;headerlink&quot; title=&quot;SSH 访问日志分析&quot;&gt;&lt;/a&gt;SSH 访问日志分析&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://lancezhu.github.io/categories/Linux/"/>
    
    
      <category term="SSH,Linux" scheme="https://lancezhu.github.io/tags/SSH-Linux/"/>
    
  </entry>
  
  <entry>
    <title>tmux</title>
    <link href="https://lancezhu.github.io/2020/07/11/tmux/"/>
    <id>https://lancezhu.github.io/2020/07/11/tmux/</id>
    <published>2020-07-11T11:01:00.000Z</published>
    <updated>2020-07-11T11:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h1><h2 id="tmux-terminal-multiplexer"><a href="#tmux-terminal-multiplexer" class="headerlink" title="tmux - terminal multiplexer"></a>tmux - terminal multiplexer</h2><p>通过 session window pane 三个维度复用</p><h2 id="工作流"><a href="#工作流" class="headerlink" title="工作流"></a>工作流</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">tmux // 新建session</span><br><span class="line"></span><br><span class="line">ctrl+b % // 左右分割为两个pane</span><br><span class="line">ctrl+b " // 上下分割为两个pane</span><br><span class="line"></span><br><span class="line">ctrl+b w // 显示 window</span><br><span class="line">ctrl+b q // 显示pane对应序号</span><br><span class="line"></span><br><span class="line">ctrl+b x // 关闭当前pane</span><br><span class="line">ctrl+b d // detach 当前 session</span><br><span class="line"></span><br><span class="line">tmux list-session // 列出所有session</span><br><span class="line"></span><br><span class="line">tmux attach-session -t 序号 // attach到对应session</span><br><span class="line"></span><br><span class="line">tmux kill-session -t 序号 // kill 对应 session</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;tmux&quot;&gt;&lt;a href=&quot;#tmux&quot; class=&quot;headerlink&quot; title=&quot;tmux&quot;&gt;&lt;/a&gt;tmux&lt;/h1&gt;&lt;h2 id=&quot;tmux-terminal-multiplexer&quot;&gt;&lt;a href=&quot;#tmux-terminal-multip
      
    
    </summary>
    
    
      <category term="Linux,cheatsheet" scheme="https://lancezhu.github.io/categories/Linux-cheatsheet/"/>
    
    
      <category term="Linux,tmux,Software" scheme="https://lancezhu.github.io/tags/Linux-tmux-Software/"/>
    
  </entry>
  
  <entry>
    <title>tt-rss 使用记录</title>
    <link href="https://lancezhu.github.io/2020/05/18/tt-rss/"/>
    <id>https://lancezhu.github.io/2020/05/18/tt-rss/</id>
    <published>2020-05-18T03:27:00.000Z</published>
    <updated>2020-05-18T03:27:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tt-rss-使用记录"><a href="#tt-rss-使用记录" class="headerlink" title="tt-rss 使用记录"></a>tt-rss 使用记录</h1><p>之前使用的 RSS 阅读器 <a href="https://www.inoreader.com/" target="_blank" rel="noopener">inoreader</a> 由于网络原因，无法正常使用。选用 <a href="https://tt-rss.org/" target="_blank" rel="noopener">tt-rss(Tiny Tiny RSS)</a>  自行搭建。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>官方演示站点：</strong><a href="https://srv.tt-rss.org/tt-rss/" target="_blank" rel="noopener">demo</a> 用户名：<code>demo</code> 密码：<code>demo</code></p><hr><p>tt-rss 是一款由 PHP 编写的开源免费 feed 阅读器和聚集器。</p><p>用户自行搭建，对订阅内容具有完全控制权，可通过<a href="https://tt-rss.org/wiki/Plugins" target="_blank" rel="noopener">插件</a>和<a href="https://tt-rss.org/wiki/Themes" target="_blank" rel="noopener">主题</a>进行个性化定制。</p><p>包含浏览器和 <a href="https://srv.tt-rss.org/fdroid/#org.fox.ttrss" target="_blank" rel="noopener">Android 端</a> 应用。</p><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><ul><li><a href="https://git.tt-rss.org/fox/ttrss-docker-compose/src/static-dockerhub" target="_blank" rel="noopener">官方 docker 搭建指南</a></li></ul><h2 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h2><ul><li><a href="http://ttrss.henry.wang/" target="_blank" rel="noopener">Awesome TTRSS</a>：tt-rss 相关内容</li><li><a href="https://docs.rsshub.app/en/" target="_blank" rel="noopener">RSSHub</a>：RSS 聚集器，寻找 RSS 订阅源</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;tt-rss-使用记录&quot;&gt;&lt;a href=&quot;#tt-rss-使用记录&quot; class=&quot;headerlink&quot; title=&quot;tt-rss 使用记录&quot;&gt;&lt;/a&gt;tt-rss 使用记录&lt;/h1&gt;&lt;p&gt;之前使用的 RSS 阅读器 &lt;a href=&quot;https://www
      
    
    </summary>
    
    
      <category term="默认分类" scheme="https://lancezhu.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="软件,tt-rss" scheme="https://lancezhu.github.io/tags/%E8%BD%AF%E4%BB%B6-tt-rss/"/>
    
  </entry>
  
  <entry>
    <title>wsl</title>
    <link href="https://lancezhu.github.io/2020/05/10/wsl/"/>
    <id>https://lancezhu.github.io/2020/05/10/wsl/</id>
    <published>2020-05-10T11:43:46.000Z</published>
    <updated>2020-05-10T11:43:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="wsl"><a href="#wsl" class="headerlink" title="wsl"></a>wsl</h1><p>Details: <a href="https://docs.microsoft.com/en-us/windows/wsl/about" target="_blank" rel="noopener">wsl - Windows Subsystem Linux</a></p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><p><strong>add Open Windows Terminal Here Option to Right-click Menu</strong></p><ul><li><a href="https://windowsloop.com/add-open-windows-terminal-here-option-to-right-click-menu/" target="_blank" rel="noopener">WindowsLoop</a></li></ul><h2 id="Issues"><a href="#Issues" class="headerlink" title="Issues"></a>Issues</h2><p><strong>nginx + php5.6-fpm timeout</strong></p><p>workaround: set <code>fastcgi_buffering: off</code> in nginx conf.</p><ul><li><a href="https://github.com/Microsoft/WSL/issues/393#issuecomment-442498519" target="_blank" rel="noopener">GitHub issue</a></li><li><a href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_buffering" target="_blank" rel="noopener">fastcgi_buffering doc</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;wsl&quot;&gt;&lt;a href=&quot;#wsl&quot; class=&quot;headerlink&quot; title=&quot;wsl&quot;&gt;&lt;/a&gt;wsl&lt;/h1&gt;&lt;p&gt;Details: &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/abo
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>博客迁移</title>
    <link href="https://lancezhu.github.io/2020/03/10/blog-migration/"/>
    <id>https://lancezhu.github.io/2020/03/10/blog-migration/</id>
    <published>2020-03-10T08:24:00.000Z</published>
    <updated>2020-03-10T08:24:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客迁移"><a href="#博客迁移" class="headerlink" title="博客迁移"></a>博客迁移</h1><p><a href="https://cloud.tencent.com/act/campus" target="_blank" rel="noopener">腾讯云 学生优惠服务器</a> 将于 2020/7到期</p><p>腾讯云迁移至阿里云</p><hr><h2 id="迁移内容"><a href="#迁移内容" class="headerlink" title="迁移内容"></a>迁移内容</h2><ul><li>博客 <a href="http://typecho.org/" target="_blank" rel="noopener">typecho</a></li><li>图床 <a href="https://github.com/Chevereto/Chevereto-Free" target="_blank" rel="noopener">chevereto</a></li></ul><hr><h2 id="主机数据"><a href="#主机数据" class="headerlink" title="主机数据"></a>主机数据</h2><h3 id="系统级"><a href="#系统级" class="headerlink" title="系统级"></a>系统级</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top // 查看 CPU 内存占用</span><br><span class="line">df // 查看磁盘占用</span><br></pre></td></tr></table></figure><blockquote><p>CPU 平均占用率 3%</p><p>内存 总 1G 平均占用率 50%</p><p>磁盘 总 50G 占用 15G</p></blockquote><h3 id="应用级"><a href="#应用级" class="headerlink" title="应用级"></a>应用级</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps // 查看进程 -aux  --sort=%mem --sort=%cpu</span><br></pre></td></tr></table></figure><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p database &gt; database.sql // 备份</span><br></pre></td></tr></table></figure><hr><h2 id="迁移过程"><a href="#迁移过程" class="headerlink" title="迁移过程"></a>迁移过程</h2><h3 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php-fpm // php fastcgi process manager</span><br></pre></td></tr></table></figure><h3 id="数据库-1"><a href="#数据库-1" class="headerlink" title="数据库"></a>数据库</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create user <span class="string">'user'</span>@<span class="string">'localhost'</span> identified by <span class="string">'password'</span>; // 创建新用户</span><br><span class="line">drop user <span class="string">'username'</span>@<span class="string">'localhost'</span>;</span><br><span class="line">grant all privileges on `database`.* to <span class="string">'user'</span>@<span class="string">'localhost'</span>; // 数据库授权</span><br><span class="line">mysql -u user -p database &lt; database.sql // 导入数据</span><br></pre></td></tr></table></figure><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><p><strong>nginx 配置支持 php</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*\.(jpg|gif|png|bmp)$ &#123;</span><br><span class="line">                gzip on;</span><br><span class="line">                gzip_http_version 1.1;</span><br><span class="line">                gzip_comp_level 3;</span><br><span class="line">                gzip_types text/plain application/json application/x-javascript application/css application/xml application/xml+rss text/javascript application/x-httpd-php image/jpeg image/gif image/png image/x-ms-bmp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                <span class="comment"># First attempt to serve request as file, then</span></span><br><span class="line">                <span class="comment"># as directory, then fall back to displaying a 404.</span></span><br><span class="line">                <span class="comment">#deal with fake static problems</span></span><br><span class="line">                <span class="keyword">if</span> (-f <span class="variable">$request_filename</span>/index.html)&#123;</span><br><span class="line">                        rewrite (.*) <span class="variable">$1</span>/index.html <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (-f <span class="variable">$request_filename</span>/index.php)&#123;</span><br><span class="line">                        rewrite (.*) <span class="variable">$1</span>/index.php;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (!-f <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">                        rewrite (.*) /index.php;</span><br><span class="line">                &#125;</span><br><span class="line">                try_files <span class="variable">$uri</span> <span class="variable">$uri</span>/ =404;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">                include snippets/fastcgi-php.conf;</span><br><span class="line">               <span class="comment"># With php7.0-cgi alone:</span></span><br><span class="line">           <span class="comment"># fastcgi_pass 127.0.0.1:9000;</span></span><br><span class="line">               <span class="comment"># With php7.0-fpm:</span></span><br><span class="line">                fastcgi_pass unix:/run/php/php7.0-fpm.sock;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx's one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#       deny all;</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>fastcgi-php.conf</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># regex to split $uri to $fastcgi_script_name and $fastcgi_path</span></span><br><span class="line">fastcgi_split_path_info ^(.+\.php)(/.+)$;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Check that the PHP script exists before passing it</span></span><br><span class="line">try_files <span class="variable">$fastcgi_script_name</span> =404;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Bypass the fact that try_files resets $fastcgi_path_info</span></span><br><span class="line"><span class="comment"># see: http://trac.nginx.org/nginx/ticket/321</span></span><br><span class="line"><span class="built_in">set</span> <span class="variable">$path_info</span> <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">fastcgi_param PATH_INFO <span class="variable">$path_info</span>;</span><br><span class="line"></span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">include fastcgi.conf;</span><br></pre></td></tr></table></figure><h3 id="typecho-主题、插件及上传内容"><a href="#typecho-主题、插件及上传内容" class="headerlink" title="typecho 主题、插件及上传内容"></a>typecho 主题、插件及上传内容</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">打包 typecho 中 usr 目录</span><br><span class="line">usr</span><br><span class="line">├── plugins</span><br><span class="line">├── themes</span><br><span class="line">└── uploads</span><br></pre></td></tr></table></figure><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><ul><li><a href="https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx" target="_blank" rel="noopener">understanding and implementing fastcgi proxying in nginx</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;博客迁移&quot;&gt;&lt;a href=&quot;#博客迁移&quot; class=&quot;headerlink&quot; title=&quot;博客迁移&quot;&gt;&lt;/a&gt;博客迁移&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://cloud.tencent.com/act/campus&quot; target=&quot;_blank&quot;
      
    
    </summary>
    
    
      <category term="默认分类" scheme="https://lancezhu.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>node.js cheatsheet</title>
    <link href="https://lancezhu.github.io/2020/02/05/cheatsheet-nodejs/"/>
    <id>https://lancezhu.github.io/2020/02/05/cheatsheet-nodejs/</id>
    <published>2020-02-05T09:47:00.000Z</published>
    <updated>2020-02-05T09:47:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node-js-cheatsheet"><a href="#Node-js-cheatsheet" class="headerlink" title="Node.js cheatsheet"></a>Node.js cheatsheet</h1><h2 id="版本管理工具-nvm"><a href="#版本管理工具-nvm" class="headerlink" title="版本管理工具 nvm"></a>版本管理工具 nvm</h2><ul><li><p><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm - node version manager</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvm install node // 安装最新版 node.js</span><br><span class="line">nvm install 6.14.4 // 安装指定版本</span><br><span class="line">nvm ls // 查看已安装所有版本</span><br><span class="line">nvm use 4.14.1 // 使用指定版本</span><br></pre></td></tr></table></figure></li></ul><h2 id="包管理工具-npm-amp-yarn"><a href="#包管理工具-npm-amp-yarn" class="headerlink" title="包管理工具 npm &amp; yarn"></a>包管理工具 npm &amp; yarn</h2><ul><li><p><strong><code>npm(node program manager)</code></strong></p><p>Node.js 内置包管理工具。 官方网站 <a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a></p><p>可进行 代码包 的下载及发布。</p><p><strong>常用命令列表</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org // 更换软件源为淘宝镜像</span><br><span class="line"></span><br><span class="line">npm init // 当前文件夹初始化为 npm 包</span><br><span class="line"></span><br><span class="line">npm view lodash // 查看指定包信息</span><br><span class="line">npm repo lodash // 查看指定包仓库地址</span><br><span class="line">npm docs lodash // 查看指定包文档</span><br><span class="line"></span><br><span class="line">npm install lodash // 安装指定包</span><br><span class="line">npm install --save-dev // 安装指定包 作为开发时依赖</span><br><span class="line">npm install -g lodash // 全局安装指定包</span><br><span class="line">npm install lodash --registry=https://registry.npm.taobao.org // 通过指定镜像安装指定包</span><br><span class="line"></span><br><span class="line">npm link local-package // 链接本地包，用于开发时调试</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong><code>yarn</code></strong></p><p>官方网站 <a href="https://github.com/yarnpkg/yarn" target="_blank" rel="noopener">yarn</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Node-js-cheatsheet&quot;&gt;&lt;a href=&quot;#Node-js-cheatsheet&quot; class=&quot;headerlink&quot; title=&quot;Node.js cheatsheet&quot;&gt;&lt;/a&gt;Node.js cheatsheet&lt;/h1&gt;&lt;h2 id=&quot;版
      
    
    </summary>
    
    
      <category term="cheatsheet" scheme="https://lancezhu.github.io/categories/cheatsheet/"/>
    
    
      <category term="cheatsheet" scheme="https://lancezhu.github.io/tags/cheatsheet/"/>
    
  </entry>
  
  <entry>
    <title>docker cheatsheet</title>
    <link href="https://lancezhu.github.io/2020/02/05/cheatsheet-docker/"/>
    <id>https://lancezhu.github.io/2020/02/05/cheatsheet-docker/</id>
    <published>2020-02-05T08:24:00.000Z</published>
    <updated>2020-02-05T08:24:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-cheatsheet"><a href="#docker-cheatsheet" class="headerlink" title="docker cheatsheet"></a>docker cheatsheet</h1><h2 id="configuration"><a href="#configuration" class="headerlink" title="configuration"></a>configuration</h2><p>更换国内镜像源 - <a href="https://lug.ustc.edu.cn/wiki/mirrors/help/docker" target="_blank" rel="noopener">中科大 docker 镜像源</a></p><h2 id="镜像-image"><a href="#镜像-image" class="headerlink" title="镜像 image"></a>镜像 image</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker images <span class="comment"># 查看本机镜像</span></span><br><span class="line">$ docker pull ubuntu <span class="comment"># 拉取镜像</span></span><br><span class="line">$ docker rmi image_name <span class="comment"># 删除镜像</span></span><br><span class="line"></span><br><span class="line">$ docker run -it image_name /bin/bash <span class="comment"># 交互式运行镜像，并进入 shell 环境， i interactive，t tty</span></span><br><span class="line">$ docker run -d image_name <span class="comment"># 后台以 daemon 形式运行。注意 docker 1号进程不能以 daemon 状态运行，应前台运行</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 根据 Dockerfile 构建镜像</span></span><br><span class="line">$ cat Dockerfile</span><br><span class="line">FROM nginx:latest</span><br><span class="line">RUN apt-get update</span><br><span class="line">$ docker build -t docker-demo:v0.0.1 . <span class="comment"># 在当前目录根据 Dockerfile 构建镜像， t tag</span></span><br></pre></td></tr></table></figure><h2 id="容器-container"><a href="#容器-container" class="headerlink" title="容器 container"></a>容器 container</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker container ls <span class="comment"># 查看本机容器</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker <span class="built_in">exec</span> -it container_id /bin/bash <span class="comment"># 进入容器 shell ctrl+p+q 退出容器</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker stop container_id <span class="comment"># 关闭容器</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker delete container_id</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker start container_id</span></span><br></pre></td></tr></table></figure><h2 id="集群管理"><a href="#集群管理" class="headerlink" title="集群管理"></a>集群管理</h2><p>TODO</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;docker-cheatsheet&quot;&gt;&lt;a href=&quot;#docker-cheatsheet&quot; class=&quot;headerlink&quot; title=&quot;docker cheatsheet&quot;&gt;&lt;/a&gt;docker cheatsheet&lt;/h1&gt;&lt;h2 id=&quot;confi
      
    
    </summary>
    
    
      <category term="cheatsheet" scheme="https://lancezhu.github.io/categories/cheatsheet/"/>
    
    
      <category term="cheatsheet" scheme="https://lancezhu.github.io/tags/cheatsheet/"/>
    
  </entry>
  
  <entry>
    <title>Linux Cheatsheet</title>
    <link href="https://lancezhu.github.io/2020/02/05/cheatsheet-linux/"/>
    <id>https://lancezhu.github.io/2020/02/05/cheatsheet-linux/</id>
    <published>2020-02-05T06:41:00.000Z</published>
    <updated>2020-11-24T10:33:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux-Cheatsheet"><a href="#Linux-Cheatsheet" class="headerlink" title="Linux Cheatsheet"></a>Linux Cheatsheet</h1><p>本文记录了使用 Linux 操作系统进行软件开发时的常用操作。</p><h2 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h2><h3 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen <span class="comment"># 生成 rsa 公私钥对</span></span><br><span class="line">$ ssh-copy-id [-i 公钥文件] [远程主机地址] <span class="comment"># 向远程主机添加公钥</span></span><br><span class="line">$ ssh-agent</span><br><span class="line">$ ssh-add</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/config</span><br><span class="line">Host blog</span><br><span class="line">HostName example.com</span><br><span class="line">User f00bar</span><br><span class="line"></span><br><span class="line">$ ssh blog <span class="comment"># 登录到 blog</span></span><br></pre></td></tr></table></figure><h4 id="ssh-远程登录保持连接不断开"><a href="#ssh-远程登录保持连接不断开" class="headerlink" title="ssh 远程登录保持连接不断开"></a>ssh 远程登录保持连接不断开</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh blog -o ServerAliveInterval=60 <span class="comment"># 每60s发送心跳包</span></span><br></pre></td></tr></table></figure><ul><li><a href="https://www.digitalocean.com/community/tutorials/how-to-configure-custom-connection-options-for-your-ssh-client" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-configure-custom-connection-options-for-your-ssh-client</a></li><li><a href="https://blog.csdn.net/zhouguoqionghai/article/details/92134462" target="_blank" rel="noopener">ssh-agent 使用</a></li></ul><h3 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ scp file.txt user@ip:/home/user <span class="comment"># 复制本机文件至远程主机</span></span><br><span class="line">$ scp user@ip:/home/user/file.txt file.txt <span class="comment"># 复制远程主机文件至本机</span></span><br><span class="line">$ scp -r dir user@ip:/home/user <span class="comment"># 复制本机文件夹至远程主机，-r recrusive 递归复制</span></span><br></pre></td></tr></table></figure><h2 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h2><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ netstat -ntlp <span class="comment"># 查看开放 tcp 端口及对应应用</span></span><br></pre></td></tr></table></figure><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> iptables -F <span class="comment"># 清除所有规则</span></span></span><br></pre></td></tr></table></figure><h2 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><h3 id="df"><a href="#df" class="headerlink" title="df"></a>df</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ df -h <span class="comment"># 查看磁盘信息</span></span><br></pre></td></tr></table></figure><h3 id="du"><a href="#du" class="headerlink" title="du"></a>du</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ du /home -h <span class="comment"># 查看文件夹磁盘占用</span></span><br></pre></td></tr></table></figure><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><h3 id="top-htop"><a href="#top-htop" class="headerlink" title="top/htop"></a>top/htop</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ top <span class="comment"># 查看 CPU 占用信息</span></span><br><span class="line">$ top -d 10 <span class="comment"># 信息刷新时间为10s</span></span><br><span class="line">$ htop <span class="comment"># 信息显示更清晰</span></span><br></pre></td></tr></table></figure><h3 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ef</span><br><span class="line">$ ps aux</span><br></pre></td></tr></table></figure><h3 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ lsof <span class="comment"># 查看开放文件</span></span><br></pre></td></tr></table></figure><h2 id="文本处理"><a href="#文本处理" class="headerlink" title="文本处理"></a>文本处理</h2><h3 id="more-tail-less"><a href="#more-tail-less" class="headerlink" title="more/tail/less"></a>more/tail/less</h3><h3 id="vi-或-vim"><a href="#vi-或-vim" class="headerlink" title="vi 或 vim"></a>vi 或 vim</h3><h3 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h3><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><p>推荐 egrep，等价于 grep -E</p><p>grep 默认正则为基本正则即 BRE，egrep 默认正则为扩展正则即 ERE。</p><p>扩展正则相比于基本正则去掉了许多转义字符，方便使用。</p><h3 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h3><h2 id="软件管理"><a href="#软件管理" class="headerlink" title="软件管理"></a>软件管理</h2><h3 id="软件源"><a href="#软件源" class="headerlink" title="软件源"></a>软件源</h3><p>对于 Ubuntu，编辑 /etc/apt/sources.list，添加 Ubuntu 国内软件源：<a href="https://developer.aliyun.com/mirror/ubuntu" target="_blank" rel="noopener">阿里镜像源</a>、<a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/" target="_blank" rel="noopener">清华镜像源</a></p><h3 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h3><h4 id="终端复用"><a href="#终端复用" class="headerlink" title="终端复用"></a>终端复用</h4><ul><li><a href="./tmux">tmux - terminal multiplexer</a></li><li>screen</li></ul><h2 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h2><p>默认 <code>bash</code>，可执行文件 <code>bin/bash</code></p><p>推荐 <code>zsh</code>，<code>zsh</code> 可安装 <a href="https://github.com/ohmyzsh" target="_blank" rel="noopener"><code>ohmyzsh</code></a>, <code>ohmyzsh</code> 提供了丰富的主题，突出显示终端中关键信息，自动补全功能强大。</p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><h4 id="变量"><a href="#变量" class="headerlink" title="变量:"></a>变量:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 变量声明及访问</span></span><br><span class="line">$ name=bob <span class="comment"># 定义变量 bob</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line">bob</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span></span><br><span class="line">bob</span><br><span class="line"></span><br><span class="line"><span class="comment"># 命令替换</span></span><br><span class="line">$ output=$(date) <span class="comment"># date 命令的输出赋值给 output</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$output</span></span><br><span class="line">Sun Oct 18 09:09:12 CST 2020</span><br><span class="line"></span><br><span class="line">$ output=`date`</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$output</span></span><br><span class="line">Sun Oct 18 09:09:27 CST 2020</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组</span></span><br><span class="line">$ arr_number=(1 2 3) <span class="comment"># 数字</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;arr_number[0]&#125;</span></span><br><span class="line">1</span><br><span class="line">$ arr_nubmer[0]=4</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;arr_number[0]&#125;</span></span><br><span class="line">4</span><br><span class="line"></span><br><span class="line">$ arr_string=(<span class="string">'a'</span> <span class="string">'b'</span> <span class="string">'c'</span>)</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;arr_string[0]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin.bash</span></span><br><span class="line"><span class="comment"># 遍历数组</span></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> <span class="variable">$&#123;arr_nubmer[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$v</span>;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="管道："><a href="#管道：" class="headerlink" title="管道："></a>管道：</h4><p>管道运算符：<code>|</code>，将上一步命令的输出传递给下一命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 管道将 find . 的标准输出作为标准输入传递给 egrep tmp</span></span><br><span class="line">$ find . | egrep tmp <span class="comment"># 列出当前文件夹内容，并查找名称包含 tmp 的文件</span></span><br></pre></td></tr></table></figure><hr><p>xargs</p><p>对于不接受标准输入作为参数的命令，可通过 xargs 将标准输出传递给命令行参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls *.txt | xargs rm <span class="comment"># 删除当前文件夹下，后缀为 .txt 的文件</span></span><br></pre></td></tr></table></figure><h4 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h4><p>重定向运算符：<code>&gt;</code>、<code>&gt;&gt;</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令，运行结果输出至 debug.log</span></span><br><span class="line">$ ls . &gt; debug.log <span class="comment"># &gt; 每次运行命令会对 debug.log 内容进行覆盖</span></span><br><span class="line">$ ls . &gt;&gt; debug.log <span class="comment"># &gt;&gt; 每次运行命令会将后续内容补充至 debug.log</span></span><br></pre></td></tr></table></figure><hr><p>标准输入：用户键盘输入</p><p>标准输出：命令正常运行的输出，标识符 1</p><p>标准错误：命令运行异常输出，标识符 2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ non_exist_cmd 2&gt;error.log <span class="comment"># 标准错误输出值 error.log</span></span><br><span class="line">$ non_exist_cmd 1&gt;debug.log 2&gt;&amp;1 <span class="comment"># 标准错误传递给标准输出，并将标准输出记录到 debug.log</span></span><br></pre></td></tr></table></figure><hr><p>tee</p><p>将标准输入同时输出至标准输出和文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过 tee，可以将某些耗时的命令输出同时输出至终端和文件</span></span><br><span class="line"><span class="comment"># 输出至终端可以试试查看运行进度，输出至文件用于记录和后续分析</span></span><br><span class="line">$ find / -name <span class="string">'tmp'</span> | tee run.log</span><br></pre></td></tr></table></figure><h4 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h4><table><thead><tr><th>变量</th><th>含义</th></tr></thead><tbody><tr><td>$#</td><td>参数数量</td></tr><tr><td>$$</td><td>当前进程号</td></tr><tr><td>$*</td><td>所有参数</td></tr><tr><td>$@</td><td>所有参数</td></tr><tr><td>$?</td><td>shell 运行返回值（正常运行，返回值为0）</td></tr><tr><td>$0</td><td>运行文件名称</td></tr><tr><td>$1</td><td>第一个参数</td></tr></tbody></table><p>示例脚本如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ cat variables.sh <span class="comment"># 程序内容</span></span><br><span class="line"><span class="comment">#/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$# 参数数量'</span>： <span class="variable">$#</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$$ 当前进程号：'</span> $$</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$* 所有参数：'</span> $*</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$@ 所有参数：'</span> <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> 1 -eq 1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$? 1 == 1 返回值：'</span> $?</span><br><span class="line"><span class="built_in">test</span> 1 -eq 2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$? 1 == 2 返回值：'</span> $?</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$0 文件名称：'</span> <span class="variable">$0</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'$1 第一个参数：'</span> <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">$ bash variables.sh hello world <span class="comment"># 执行</span></span><br><span class="line"><span class="variable">$#</span> 参数数量： 2</span><br><span class="line">$$ 当前进程号： 4323</span><br><span class="line">$* 所有参数： hello world</span><br><span class="line"><span class="variable">$@</span> 所有参数： hello world</span><br><span class="line">$? 1 == 1 返回值： 0</span><br><span class="line">$? 1 == 2 返回值： 1</span><br><span class="line"><span class="variable">$0</span> 文件名称： variables.sh</span><br><span class="line"><span class="variable">$1</span> 第一个参数： hello</span><br></pre></td></tr></table></figure><h4 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h4><p>加减乘除：+ - * /</p><p>比较：</p><ul><li><p>字符串比较</p><p>==</p><p>!==</p><p>[ -z $string ] 字符串长度为0</p><p>[ -n $string ] 字符串长度非0</p></li><li><p>整数比较</p><p>[ $num1 -eq $num2 ] 两数是否相等</p><p>[ $num1 -ge $num2 ] num1 &gt;= num2</p><p>[ $num1 -le $num2 ] num1 &lt;= num2</p></li><li><p>文件比较</p><p>[ -f $file ] file 存在且为常规文件</p><p>[ -d $file ] file 存在且为文件夹</p><p>[ -e $file ] file 存在</p></li></ul><h4 id="程序结构"><a href="#程序结构" class="headerlink" title="程序结构"></a>程序结构</h4><p>if 条件结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ cat if.sh</span><br><span class="line"><span class="keyword">if</span> [ 1 -le 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'1 == 1'</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'1 !== 1'</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">$ bash if.sh</span><br><span class="line">1 == 1</span><br></pre></td></tr></table></figure><p>while 循环结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ cat while.sh</span><br><span class="line">x=1</span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$x</span> -le 5 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$x</span></span><br><span class="line">        <span class="built_in">let</span> x=<span class="variable">$x</span>+1</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">$ bash while.sh</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>for 循环结构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ cat for.sh</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> `seq 5`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$v</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">$ bash for.sh</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>break: 跳出循环体</p><p>continue: 跳出当前循环</p><p>exit: 退出程序，后跟返回码 exit 1</p><h4 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h4><p>函数定义及调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ cat function.sh</span><br><span class="line"><span class="comment"># 函数声明</span></span><br><span class="line"><span class="function"><span class="title">func1</span></span>() &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'parameters number: '</span> <span class="variable">$#</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'parameters: '</span> $*</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'parameter 1: '</span> <span class="variable">$1</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">'process id: '</span> $$</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数调用</span></span><br><span class="line">func1 $*</span><br><span class="line">$ bash function.sh 1 2</span><br><span class="line">parameters number:  2</span><br><span class="line">parameters:  1 2</span><br><span class="line">parameter 1:  1</span><br><span class="line">process id:  897</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Linux-Cheatsheet&quot;&gt;&lt;a href=&quot;#Linux-Cheatsheet&quot; class=&quot;headerlink&quot; title=&quot;Linux Cheatsheet&quot;&gt;&lt;/a&gt;Linux Cheatsheet&lt;/h1&gt;&lt;p&gt;本文记录了使用 Linux 
      
    
    </summary>
    
    
      <category term="Linux,cheatsheet" scheme="https://lancezhu.github.io/categories/Linux-cheatsheet/"/>
    
    
      <category term="cheatsheet,Linux" scheme="https://lancezhu.github.io/tags/cheatsheet-Linux/"/>
    
  </entry>
  
  <entry>
    <title>React 笔记</title>
    <link href="https://lancezhu.github.io/2019/11/22/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91React/"/>
    <id>https://lancezhu.github.io/2019/11/22/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91React/</id>
    <published>2019-11-22T08:23:00.000Z</published>
    <updated>2019-11-22T08:23:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-js-笔记"><a href="#React-js-笔记" class="headerlink" title="React.js 笔记"></a>React.js 笔记</h1><p><a href="https://reactjs.org/" target="_blank" rel="noopener">官网</a></p><h2 id="概念解释"><a href="#概念解释" class="headerlink" title="概念解释"></a>概念解释</h2><h3 id="受控组件与非受控组件"><a href="#受控组件与非受控组件" class="headerlink" title="受控组件与非受控组件"></a>受控组件与非受控组件</h3><p>受控组件：被调用者显示数据由调用者维护。</p><p>非受控组件：被调用者显示数据由自身维护。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-js-笔记&quot;&gt;&lt;a href=&quot;#React-js-笔记&quot; class=&quot;headerlink&quot; title=&quot;React.js 笔记&quot;&gt;&lt;/a&gt;React.js 笔记&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://reactjs.org/&quot; tar
      
    
    </summary>
    
    
      <category term="Web 前端" scheme="https://lancezhu.github.io/categories/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Vue 笔记</title>
    <link href="https://lancezhu.github.io/2019/11/19/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91Vue/"/>
    <id>https://lancezhu.github.io/2019/11/19/%E3%80%90%E7%AC%94%E8%AE%B0%E3%80%91Vue/</id>
    <published>2019-11-19T11:29:00.000Z</published>
    <updated>2019-11-19T11:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue-笔记"><a href="#Vue-笔记" class="headerlink" title="Vue 笔记"></a>Vue 笔记</h1><p><code>vue</code> 一个组件化、响应式的前端框架</p><p><a href="https://vuejs.org" target="_blank" rel="noopener">官网</a>  <a href="https://github.com/vuejs/vue" target="_blank" rel="noopener">GitHub</a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>不同于直接在 <code>.html</code> 文件中编写页面相关代码，<code>vue</code> 框架使得开发者以组件化的形式组织代码，增强代码的复用性。</p><p>编写的 <code>.vue</code> 代码再通过 <a href="https://babeljs.io/" target="_blank" rel="noopener"><code>babel</code></a> 编译工具生成 <code>javascript</code>，<a href="https://eslint.org/" target="_blank" rel="noopener"><code>eslint</code></a> 格式化代码，使用 <a href="https://webpack.js.org/" target="_blank" rel="noopener"><code>webpack</code></a> 打包工具优化代码，自动化生成最终可部署的代码。</p><p>Tips: </p><ol><li>前端路由。不同于在浏览器中输入链接就向后端请求对应的资源文件，<code>vue</code> 利用浏览器不会在 <code>https://example.com/#/...</code> # 符号变化后发起网络请求的特性，将路由控制权交由开发者编写的  <code>javascript</code> 代码，从而实现 # 符号后面不同路径渲染不同页面，发起相应的网络请求。</li><li>单页面应用(Single Page Application)。通过引入前端路由实现在单一页面内渲染不同业务组件。</li></ol><h2 id="开始上手"><a href="#开始上手" class="headerlink" title="开始上手"></a>开始上手</h2><p>可通过两种方式使用 <code>vue</code></p><ol><li><p>在 <code>.html</code> 文件中直接通过 <code>script</code> 标签引入 <code>vue</code> 运行时</p></li><li><p>通过 <code>vue-cli</code> 脚手架生成项目文件结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-cli // 通过 npm 包管理工具安装脚手架</span><br><span class="line">vue-cli create vue-demo // 通过脚手架生成项目文件</span><br><span class="line">// 修改相应文件实现不同逻辑</span><br><span class="line">npm run serve // 启动开发环境</span><br><span class="line">npm run build // 生成可部署的代码</span><br></pre></td></tr></table></figure></li></ol><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><ul><li><a href="https://element.eleme.cn/" target="_blank" rel="noopener">Element UI 前端组件库</a></li><li><a href="https://github.com/surmon-china/vue-quill-editor" target="_blank" rel="noopener">vue-quill-editor 在线编辑器</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Vue-笔记&quot;&gt;&lt;a href=&quot;#Vue-笔记&quot; class=&quot;headerlink&quot; title=&quot;Vue 笔记&quot;&gt;&lt;/a&gt;Vue 笔记&lt;/h1&gt;&lt;p&gt;&lt;code&gt;vue&lt;/code&gt; 一个组件化、响应式的前端框架&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:
      
    
    </summary>
    
    
      <category term="Web 前端" scheme="https://lancezhu.github.io/categories/Web-%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>字节跳动前端面经（日常实习生）</title>
    <link href="https://lancezhu.github.io/2019/10/17/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%89%8D%E7%AB%AF%E9%9D%A2%E7%BB%8F%EF%BC%88%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0%E7%94%9F%EF%BC%89/"/>
    <id>https://lancezhu.github.io/2019/10/17/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%89%8D%E7%AB%AF%E9%9D%A2%E7%BB%8F%EF%BC%88%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0%E7%94%9F%EF%BC%89/</id>
    <published>2019-10-17T09:16:19.000Z</published>
    <updated>2019-10-17T11:45:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字节跳动前端面经（日常实习生）"><a href="#字节跳动前端面经（日常实习生）" class="headerlink" title="字节跳动前端面经（日常实习生）"></a>字节跳动前端面经（日常实习生）</h1><h2 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h2><p>笔试(30 min)：</p><ol><li><code>JavaScript</code> <code>Event loop</code></li><li><code>JavaScript</code> 尾递归优化</li><li><code>CSS</code> 绘制梯形</li><li><code>CSS</code> <code>line-height</code> 属性取不同类型值时，父子元素行高表现</li><li>二叉树中是否存在和为某值的路径</li><li>error-first callback 函数 <code>promisify</code></li></ol><p>面试：</p><p>笔试内容解释</p><p><code>JavaScript</code> 数据类型、原型链、<code>this</code> 绑定、类和继承</p><p>前端工具 <code>webpack</code>、<code>babel</code> 是什么、为什么、怎么用</p><p>个人项目</p><p>前端知识如何学习及更新</p><p>及根据回答内容扩展</p><h2 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h2><ul><li>前端跨域原因及解决方案</li><li>前端安全</li><li><code>JavaScript</code> 数组方法，<code>Date</code>对象</li><li>…</li></ul><h2 id="三面"><a href="#三面" class="headerlink" title="三面"></a>三面</h2><ul><li>项目中个人角色及对项目思考、项目架构及关键技术</li><li>淘宝 APP 界面倒计时实现及完善</li></ul><h2 id="资料推荐"><a href="#资料推荐" class="headerlink" title="资料推荐"></a>资料推荐</h2><p><strong>JavaScript</strong></p><ul><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">ECMAScript 6 入门 - 阮一峰</a></li><li><a href="https://github.com/getify/You-Dont-Know-JS" target="_blank" rel="noopener">You Don’t Know JS</a></li><li><a href="https://book.douban.com/subject/10546125/" target="_blank" rel="noopener">JavaScript 高级程序设计</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener">MDN web docs</a></li><li><a href="https://github.com/yygmind/blog" target="_blank" rel="noopener">博客 - 木易杨</a></li></ul><p><strong>Node.js</strong></p><ul><li><a href="https://book.douban.com/subject/25768396/" target="_blank" rel="noopener">深入浅出Node.js</a></li></ul><p><strong>设计模式</strong></p><ul><li><a href="https://book.douban.com/subject/26382780/" target="_blank" rel="noopener">JavaScript 设计模式与开发实践</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;字节跳动前端面经（日常实习生）&quot;&gt;&lt;a href=&quot;#字节跳动前端面经（日常实习生）&quot; class=&quot;headerlink&quot; title=&quot;字节跳动前端面经（日常实习生）&quot;&gt;&lt;/a&gt;字节跳动前端面经（日常实习生）&lt;/h1&gt;&lt;h2 id=&quot;一面&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>DoH 和 DoT</title>
    <link href="https://lancezhu.github.io/2019/10/05/DoH-%E5%92%8C-DoT/"/>
    <id>https://lancezhu.github.io/2019/10/05/DoH-%E5%92%8C-DoT/</id>
    <published>2019-10-05T10:24:00.000Z</published>
    <updated>2019-10-05T10:24:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DoH-和-DoT"><a href="#DoH-和-DoT" class="headerlink" title="DoH 和 DoT"></a>DoH 和 DoT</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>DNS(Domain Name Server)</p><p>DoH(DNS over HTTPS) 基于 HTTPS 和 HTTP2，使用端口443。协议标准 <a href="https://datatracker.ietf.org/doc/rfc7858/" target="_blank" rel="noopener">RFC 7858</a>、<a href="https://tools.ietf.org/html/rfc8310" target="_blank" rel="noopener">RFC 8310</a></p><p>DoT(DNS over TLS) 基于 TCP，使用端口853。协议标准 <a href="https://tools.ietf.org/html/rfc8484" target="_blank" rel="noopener">RFC 8484</a></p><p>DoH 和 DoT 均起到了加密 DNS 请求的作用。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>iOS：cloudflare 提供的 1.1.1.1</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://hacks.mozilla.org/2018/05/a-cartoon-intro-to-dns-over-https" target="_blank" rel="noopener">A cartoon intro to DNS over HTTPS - Lin Clark</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DoH-和-DoT&quot;&gt;&lt;a href=&quot;#DoH-和-DoT&quot; class=&quot;headerlink&quot; title=&quot;DoH 和 DoT&quot;&gt;&lt;/a&gt;DoH 和 DoT&lt;/h1&gt;&lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="默认分类" scheme="https://lancezhu.github.io/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="DNS" scheme="https://lancezhu.github.io/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>影记（文字版）</title>
    <link href="https://lancezhu.github.io/2019/09/29/%E5%BD%B1%E8%AE%B0%EF%BC%88%E6%96%87%E5%AD%97%E7%89%88%EF%BC%89/"/>
    <id>https://lancezhu.github.io/2019/09/29/%E5%BD%B1%E8%AE%B0%EF%BC%88%E6%96%87%E5%AD%97%E7%89%88%EF%BC%89/</id>
    <published>2019-09-29T09:16:19.000Z</published>
    <updated>2020-05-12T11:45:45.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2020"><a href="#2020" class="headerlink" title="2020"></a>2020</h3><h4 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h4><ul><li><a href="https://movie.douban.com/subject/30182726/" target="_blank" rel="noopener">The Hunt 狩猎</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/30252495/" target="_blank" rel="noopener">1917</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/30211998/" target="_blank" rel="noopener">The Gentlemen 绅士们</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/6538866/" target="_blank" rel="noopener">Ford vs Ferrari 极速车王</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1292531/" target="_blank" rel="noopener">Wall Street 华尔街</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1301746/" target="_blank" rel="noopener">Hannibal 汉尼拔</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/26325320/" target="_blank" rel="noopener">Hacksaw Ridge 血战钢锯岭</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/4917726/" target="_blank" rel="noopener">阳光姐妹淘</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1292286/" target="_blank" rel="noopener">我的野蛮女友</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1295253/" target="_blank" rel="noopener">American Pie 美国派</a> <span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1300064/" target="_blank" rel="noopener">家有喜事1992</a><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1305197/" target="_blank" rel="noopener">家有喜事1997</a><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1305164/" target="_blank" rel="noopener">甜蜜蜜</a><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/27133303/" target="_blank" rel="noopener">超时空同居</a><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/3011091/" target="_blank" rel="noopener">忠犬八公的故事</a><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li><li><a href="https://movie.douban.com/subject/1292274/" target="_blank" rel="noopener">幸福终点站</a><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li></ul><h4 id="动漫"><a href="#动漫" class="headerlink" title="动漫"></a>动漫</h4><ul><li><a href="https://movie.douban.com/subject/34456079/" target="_blank" rel="noopener">一人之下3</a><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span><span class="github-emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">&#x2b50;</span></li></ul><h3 id="2019"><a href="#2019" class="headerlink" title="2019"></a>2019</h3><hr><ul><li><h4 id="电影-1"><a href="#电影-1" class="headerlink" title="电影"></a>电影</h4><ul><li>流浪地球</li><li>绿皮书</li><li>海王</li><li>白蛇-缘起</li><li>Justice League</li><li>Thor Ragnarok</li><li>Thor The Dark World</li><li>Thor</li><li><a href="https://movie.douban.com/subject/26580232/" target="_blank" rel="noopener">看不见的客人</a></li><li><a href="https://movie.douban.com/subject/30164448/" target="_blank" rel="noopener">海市蜃楼</a></li><li><a href="https://movie.douban.com/subject/30334073/" target="_blank" rel="noopener">调音师</a></li><li><a href="https://movie.douban.com/subject/5300054/" target="_blank" rel="noopener">波西米亚狂想曲</a></li><li><a href="https://movie.douban.com/subject/1853176/" target="_blank" rel="noopener">斯巴达300勇士</a></li><li><a href="https://movie.douban.com/subject/30163509/" target="_blank" rel="noopener">飞驰人生</a></li><li><a href="https://movie.douban.com/subject/3005875/" target="_blank" rel="noopener">2012</a></li><li><a href="https://movie.douban.com/subject/3569910/" target="_blank" rel="noopener">Suicide Squad</a></li><li><a href="https://movie.douban.com/subject/27098363/" target="_blank" rel="noopener">Suicide Squad: Hell to Pay</a></li><li><a href="https://movie.douban.com/subject/1292348/" target="_blank" rel="noopener">L.A. Confidential</a></li><li><a href="https://movie.douban.com/subject/1478064/" target="_blank" rel="noopener">人类之子</a></li><li><a href="https://movie.douban.com/subject/30272143/" target="_blank" rel="noopener">盗梦特工队</a></li><li><a href="https://movie.douban.com/subject/3026357/" target="_blank" rel="noopener">老爷车</a></li><li><a href="https://movie.douban.com/subject/1301171/" target="_blank" rel="noopener">偷拐抢骗</a></li><li><a href="https://movie.douban.com/subject/2998270/" target="_blank" rel="noopener">大侦探福尔摩斯</a></li><li><a href="https://movie.douban.com/subject/4051753/" target="_blank" rel="noopener">大侦探福尔摩斯2：诡影游戏</a></li><li><a href="https://movie.douban.com/subject/26100958/" target="_blank" rel="noopener">复仇者联盟4：终局之战</a></li><li><a href="https://movie.douban.com/subject/5912992/" target="_blank" rel="noopener">熔炉</a></li><li><a href="https://movie.douban.com/subject/27663742/" target="_blank" rel="noopener">老师·好 </a></li><li><a href="https://movie.douban.com/subject/26996734/" target="_blank" rel="noopener">一个母亲的复仇</a></li><li><a href="https://movie.douban.com/subject/1305487/" target="_blank" rel="noopener">猫鼠游戏</a></li><li><a href="https://movie.douban.com/subject/6985810/" target="_blank" rel="noopener">狩猎</a></li><li><a href="https://movie.douban.com/subject/4268598/" target="_blank" rel="noopener">告白</a></li><li><a href="https://movie.douban.com/subject/1787291/" target="_blank" rel="noopener">被嫌弃的松子的一生</a></li><li><a href="https://movie.douban.com/subject/1292343/" target="_blank" rel="noopener">蝴蝶效应</a></li><li><a href="https://movie.douban.com/subject/10463953/" target="_blank" rel="noopener">模仿游戏</a></li><li><a href="https://movie.douban.com/subject/26614893/" target="_blank" rel="noopener">完美陌生人</a></li><li><a href="https://movie.douban.com/subject/1578507/" target="_blank" rel="noopener">谍影重重3</a></li><li><a href="https://movie.douban.com/subject/26213252/" target="_blank" rel="noopener">惊奇队长</a></li><li><a href="https://movie.douban.com/subject/30167509/" target="_blank" rel="noopener">徒手攀岩</a></li><li><a href="https://movie.douban.com/subject/1298070/" target="_blank" rel="noopener">加勒比海盗1：黑珍珠号的诅咒</a></li><li><a href="https://movie.douban.com/subject/25890017/" target="_blank" rel="noopener">哥斯拉2</a></li><li><a href="https://movie.douban.com/subject/1315574/" target="_blank" rel="noopener">加勒比海盗2：聚魂棺</a></li><li><a href="https://movie.douban.com/subject/1418192/" target="_blank" rel="noopener">加勒比海盗3：世界的尽头</a></li><li><a href="https://movie.douban.com/subject/1418192/" target="_blank" rel="noopener">加勒比海盗4：惊涛怪浪</a></li><li><a href="https://movie.douban.com/subject/26333560/" target="_blank" rel="noopener">John Wick: Chapter 2</a></li><li><a href="https://movie.douban.com/subject/1300299/" target="_blank" rel="noopener">杀人回忆</a></li><li><a href="https://movie.douban.com/subject/25986180/" target="_blank" rel="noopener">釜山行</a></li><li><a href="https://movie.douban.com/subject/25785114/" target="_blank" rel="noopener">互联网之子</a></li><li><a href="https://movie.douban.com/subject/30170448/" target="_blank" rel="noopener">何以为家</a></li><li><a href="https://movie.douban.com/subject/21937445/" target="_blank" rel="noopener">辩护人</a></li><li><a href="https://movie.douban.com/subject/27607378/" target="_blank" rel="noopener">龙珠超：布罗利</a></li><li><a href="https://movie.douban.com/subject/1652592/" target="_blank" rel="noopener">阿丽塔：战斗天使</a></li><li><a href="https://movie.douban.com/subject/2244426/" target="_blank" rel="noopener">雷霆沙赞</a></li><li><a href="https://movie.douban.com/subject/1865703/" target="_blank" rel="noopener">红辣椒</a></li><li><a href="https://movie.douban.com/subject/1307897/" target="_blank" rel="noopener">回忆三部曲</a></li><li><a href="https://movie.douban.com/subject/25917973/" target="_blank" rel="noopener">心迷宫</a></li><li><a href="https://movie.douban.com/subject/26794435/?from=showing" target="_blank" rel="noopener">哪吒之魔童降世</a></li><li><a href="https://movie.douban.com/subject/1959877/" target="_blank" rel="noopener">悬崖上的金鱼姬</a></li><li><a href="https://movie.douban.com/subject/26909790/" target="_blank" rel="noopener">John Wick: Chapter 3</a></li><li><a href="https://movie.douban.com/subject/1291999/" target="_blank" rel="noopener">重庆森林</a></li><li><a href="https://movie.douban.com/subject/3681613/" target="_blank" rel="noopener">大闹天宫</a></li><li><a href="https://movie.douban.com/subject/1291818/" target="_blank" rel="noopener">饮食男女</a></li><li><a href="https://movie.douban.com/subject/3071441/" target="_blank" rel="noopener">雪国列车</a></li><li><a href="https://movie.douban.com/subject/1309059/" target="_blank" rel="noopener">艺伎回忆录</a></li><li><a href="https://movie.douban.com/subject/27010768/" target="_blank" rel="noopener">寄生虫</a></li><li><a href="https://movie.douban.com/subject/30329892/" target="_blank" rel="noopener">海贼王：狂热行动</a></li><li><a href="https://movie.douban.com/subject/1292699/" target="_blank" rel="noopener">东方快车谋杀案</a></li><li><a href="https://movie.douban.com/subject/1291548/" target="_blank" rel="noopener">死亡诗社</a></li><li><a href="https://movie.douban.com/subject/1304102/" target="_blank" rel="noopener">谍影重重</a></li><li><a href="https://movie.douban.com/subject/26931786/" target="_blank" rel="noopener">蜘蛛侠：英雄远征</a></li><li><a href="https://movie.douban.com/subject/1308767/" target="_blank" rel="noopener">谍影重重2</a></li><li><a href="https://movie.douban.com/subject/25839052/" target="_blank" rel="noopener">无人生还</a></li><li><a href="https://movie.douban.com/subject/1292270/" target="_blank" rel="noopener">梦之安魂曲</a></li><li><a href="https://movie.douban.com/subject/26266072/" target="_blank" rel="noopener">碟中谍5</a></li><li><a href="https://movie.douban.com/subject/27163278/" target="_blank" rel="noopener">速度与激情：特别行动</a></li><li><a href="https://movie.douban.com/subject/1291936/" target="_blank" rel="noopener">攻壳机动队</a></li><li><a href="https://movie.douban.com/subject/1291566/" target="_blank" rel="noopener">攻壳机动队：无罪</a></li><li><a href="https://movie.douban.com/subject/30208010/" target="_blank" rel="noopener">名侦探柯南：绀青之拳</a></li><li><a href="https://movie.douban.com/subject/30282387/" target="_blank" rel="noopener">银河补习班</a></li><li><a href="https://movie.douban.com/subject/6549903/" target="_blank" rel="noopener">逃离德黑兰</a></li><li><a href="https://movie.douban.com/subject/3792799/" target="_blank" rel="noopener">岁月神偷</a></li><li><a href="https://movie.douban.com/subject/1862151/" target="_blank" rel="noopener">疯狂的石头</a></li><li><a href="https://movie.douban.com/subject/2124703/" target="_blank" rel="noopener">疯狂的赛车</a></li><li><a href="https://movie.douban.com/subject/26709258/" target="_blank" rel="noopener">罗小黑战记</a></li><li><a href="https://movie.douban.com/subject/27119724/" target="_blank" rel="noopener">小丑</a></li><li><a href="https://movie.douban.com/subject/5330387/" target="_blank" rel="noopener">青年马克思</a></li><li><a href="https://movie.douban.com/subject/1297192/" target="_blank" rel="noopener">致命ID</a></li><li><a href="https://movie.douban.com/subject/27087724/" target="_blank" rel="noopener">好莱坞往事</a></li><li><a href="https://movie.douban.com/subject/30295905/" target="_blank" rel="noopener">中国机长</a></li><li><a href="https://movie.douban.com/subject/1485260/" target="_blank" rel="noopener">本杰明·巴顿奇事</a></li></ul></li><li><h4 id="剧集"><a href="#剧集" class="headerlink" title="剧集"></a>剧集</h4><ul><li>Prison Break S01-S04</li><li>绝命毒师</li><li>Love Death and Robots</li><li><a href="https://movie.douban.com/subject/26584183/" target="_blank" rel="noopener">Game of Thrones Season 8</a></li><li><a href="https://movie.douban.com/subject/30353357/" target="_blank" rel="noopener">进击的巨人 Season 3</a></li><li><a href="https://movie.douban.com/subject/27624762/" target="_blank" rel="noopener">刺客伍六七</a></li><li><a href="https://movie.douban.com/subject/26339248/" target="_blank" rel="noopener">一拳超人 第一季</a></li><li><a href="https://movie.douban.com/subject/26882339/" target="_blank" rel="noopener">一拳超人 第二季</a></li><li><a href="https://movie.douban.com/subject/30161936/" target="_blank" rel="noopener">黑镜 第五季</a></li><li><a href="https://movie.douban.com/subject/26184588/" target="_blank" rel="noopener">天行九歌</a></li><li><a href="https://movie.douban.com/subject/1998268/" target="_blank" rel="noopener">家庭教师</a></li><li><a href="https://movie.douban.com/subject/3703650/" target="_blank" rel="noopener">黑袍纠察队</a></li><li><a href="https://movie.douban.com/subject/10477598/" target="_blank" rel="noopener">罗小黑战记</a></li><li><a href="https://movie.douban.com/subject/27121260/" target="_blank" rel="noopener">灵笼</a></li><li><a href="https://movie.douban.com/subject/2160565/" target="_blank" rel="noopener">家有儿女</a></li><li><a href="https://movie.douban.com/subject/30194648/" target="_blank" rel="noopener">硅谷</a></li><li><a href="https://movie.douban.com/subject/33441919/" target="_blank" rel="noopener">奇葩说</a></li><li><a href="https://movie.douban.com/subject/30357990/" target="_blank" rel="noopener">乐队的夏天</a></li><li><a href="https://movie.douban.com/subject/27166039/" target="_blank" rel="noopener">Rick and Morty Season 4</a></li><li><a href="https://movie.douban.com/subject/1460919/" target="_blank" rel="noopener">全职猎人</a></li></ul></li><li><h4 id="播客"><a href="#播客" class="headerlink" title="播客"></a>播客</h4><ul><li><a href="https://teahour.fm" target="_blank" rel="noopener">TeaHour</a></li><li><a href="https://www.lizhi.fm/user/2579240391643675180" target="_blank" rel="noopener">得意忘形</a></li><li><a href="https://www.ximalaya.com/yinyue/8583636/" target="_blank" rel="noopener">大内密谈</a><h3 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h3></li></ul></li></ul><hr><ul><li><h4 id="电影-2"><a href="#电影-2" class="headerlink" title="电影"></a>电影</h4><ul><li>加勒比海盗5-死无对证</li><li>喜剧之王</li><li>大话西游之大圣娶亲</li><li>少林足球</li><li>无极</li><li>死侍2</li><li>的士速递5</li><li>红高粱</li><li>蝙蝠侠大战超人-正义黎明</li><li>西游伏妖篇</li><li>让子弹飞</li><li>赌圣</li><li>进击的巨人-觉醒的咆哮</li><li>逃学威龙</li><li>逐梦演艺圈</li><li>阳光灿烂的日子</li><li>飞屋环游记</li><li>鼠来宝</li><li>社交网络</li><li>幽灵公主</li><li>记忆碎片</li><li>消失的爱人</li><li>美国X档案</li><li>惊魂记</li><li>后窗</li><li>那个男人来自地球</li><li>奇异博士</li><li>情书</li><li>绿里奇迹</li><li>两杆大烟枪</li><li>大鱼海棠</li><li>憨豆特工3</li><li>李茶的姑妈</li></ul></li><li><h4 id="剧集-1"><a href="#剧集-1" class="headerlink" title="剧集"></a>剧集</h4><ul><li>大明王朝1566</li><li>我们的少年时代</li><li>军事联盟之虎啸龙吟</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;2020&quot;&gt;&lt;a href=&quot;#2020&quot; class=&quot;headerlink&quot; title=&quot;2020&quot;&gt;&lt;/a&gt;2020&lt;/h3&gt;&lt;h4 id=&quot;电影&quot;&gt;&lt;a href=&quot;#电影&quot; class=&quot;headerlink&quot; title=&quot;电影&quot;&gt;&lt;/a&gt;电影&lt;/h
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
